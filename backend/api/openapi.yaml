openapi: 3.0.1
info:
  contact:
    email: yourfriends@flexiwan.com
    name: API support
    url: https://flexiwan.com
  description: This is the REST API for flexiWAN management.
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  termsOfService: https://flexiwan.com/legal/terms-of-service/
  title: flexiWAN API
  version: 1.0.0
servers:
- description: Main server
  url: https://manage.flexiwan.com:443/api
paths:
  /version:
    get:

      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get version of the management
      tags:
      - Version
      x-swagger-router-controller: Version
  /configuration/restServers:
    get:
      operationId: configurationRestServersGET
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServers'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get flexiManage configurations
      tags:
      - Configuration
      x-swagger-router-controller: Configuration
      x-openapi-router-controller: ConfigurationController
      x-openapi-router-service: ConfigurationService
  /tokens:
    get:
      operationId: tokensGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string

      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Token'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Tokens
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
    post:
      operationId: tokensPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new access token
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
  /tokens/{id}:
    get:
      operationId: tokensIdGET
      parameters:
      - description: Numeric ID of the Token to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Tokens
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
    delete:
      operationId: tokensIdDELETE
      parameters:
      - description: Numeric ID of the Token to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete token
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
    put:
      operationId: tokensIdPUT
      parameters:
      - description: Numeric ID of the Token to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify a token
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
  /accesstokens:
    get:
      operationId: accesstokensGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessToken'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all AccessTokens
      tags:
      - Access Tokens
      x-swagger-router-controller: AccessTokens
      x-openapi-router-controller: AccessTokensController
      x-openapi-router-service: AccessTokensService
    post:
      operationId: accesstokensPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new access token
      tags:
      - Access Tokens
      x-swagger-router-controller: AccessTokens
      x-openapi-router-controller: AccessTokensController
      x-openapi-router-service: AccessTokensService
  /accesstokens/{id}:
    delete:
      operationId: accesstokensIdDELETE
      parameters:
      - description: Numeric ID of the Access token to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete access token
      tags:
      - Access Tokens
      x-swagger-router-controller: AccessTokens
      x-openapi-router-controller: AccessTokensController
      x-openapi-router-service: AccessTokensService
  /devices:
    get:
      operationId: devicesGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
        example: 10
      - description: Type of returned data
        explode: true
        in: query
        name: response
        required: false
        schema:
          enum:
          - detailed
          - summary
          - ids
          type: string
        example: summary
      - description: The number of items to return, total records count added to the 'records-total' header of the response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
        example: 10
      - description: The field by which the data will be ordered
        explode: true
        in: query
        name: sortField
        required: false
        schema:
          type: string
        style: form
        example: name
      - description: Sorting order
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
        example: asc
      - description: Stringified array of filter objects
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
        example: '[{"key":"name","op":"contains","val":"hub"}]'
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all registered devices
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    delete:
      operationId: devicesDELETE
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicesDeleteRequest'
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Delete devices by IDs or matching the filter
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/latestVersions:
    get:
      operationId: devicesLatestVersionsGET
      responses:
       "200":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/DeviceLatestVersion'
         description: Successful operation
       "401":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unauthorized
       "403":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Forbidden
       "404":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: The specified resource was not found
       "500":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Internal server error
       default:
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get devices latest available version
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/apply:
    post:
      operationId: devicesApplyPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommand'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyJobsResponse'
          description: Job IDs Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Execute an action on the device side
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/upgdSched:
    post:
      operationId: devicesUpgdSchedPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicesUpgradeRequest'
      parameters: 
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Schedule upgrade of devices
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}:
    get:
      operationId: devicesIdGET
      parameters:
      - description: Numeric ID of the Device to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get device by ID
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    delete:
      operationId: devicesIdDELETE
      parameters:
      - description: Numeric ID of the Device to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Indicates if to remove device from VRRP group
        explode: true
        in: query
        name: removeVrrp
        required: false
        schema:
          type: string
      responses:
       "204":
         description: Successful operation
       "401":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unauthorized
       "403":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Forbidden
       "404":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: The specified resource was not found
       "500":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Internal server error
       default:
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete device
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    put:
      operationId: devicesIdPUT
      parameters:
      - description: Numeric ID of the Device to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Allow interfaces overlapping
        explode: true
        in: query
        name: allowOverlapping
        required: false
        schema:
          type: boolean
      requestBody:
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/DeviceRequest'
      responses:
       "200":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Device'
         description: Successful operation
       "202":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Device'
         description: Operation queued for processing
       "401":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unauthorized
       "403":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Forbidden
       "404":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: The specified resource was not found
       "500":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Internal server error
       default:
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify device
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/upgdSched:
    post:
      operationId: devicesIdUpgdSchedPOST
      parameters:
      - description: Numeric ID of the Device to be upgraded
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpgradeRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new access token
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/configuration:
    get:
      operationId: devicesIdConfigurationGET
      parameters:
      - description: Numeric ID of the Device to retrieve configuration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfiguration'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get Device
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/status:
    get:
      operationId: devicesIdStatusGET
      parameters:
      - description: Numeric ID of the Device to retrieve configuration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatus'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get Device Status Information
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/recoveryInfo:
    get:
      operationId: devicesIdRecoveryInfoGET
      parameters:
      - description: Numeric ID of the Device to retrieve recovery info
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRecoveryInfo'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get Device
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /peers:
    get:
      operationId: peersGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Peer'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve peers configuration
      tags:
      - Peers
      x-swagger-router-controller: Peers
      x-openapi-router-controller: PeersController
      x-openapi-router-service: PeersService
    post:
      operationId: peersPOST
      parameters:
      - description: Organization to create peer for
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Peer'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Peer'
          description: Peer has been added
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Create new peer
      tags:
      - Peers
      x-swagger-router-controller: Peers
      x-openapi-router-controller: PeersController
      x-openapi-router-service: PeersService
  /peers/{id}:
    put:
      operationId: peersIdPUT
      parameters:
      - description: Peer ID
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Organization to delete peer for
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Peer'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeersIdPUTResponse'
          description: Undated peer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Update peer
      tags:
      - Peers
      x-swagger-router-controller: Peers
      x-openapi-router-controller: PeersController
      x-openapi-router-service: PeersService
    delete:
      operationId: peersIdDelete
      parameters:
      - description: Peer ID
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Organization to delete the peer for
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Peer'
      responses:
        "204":
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Delete peer
      tags:
      - Peers
      x-swagger-router-controller: Peers
      x-openapi-router-controller: PeersController
      x-openapi-router-service: PeersService
  /tunnels:
    get:
      operationId: tunnelsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
        example: 10
      - description: The number of items to return, total records count added to the 'records-total' header of the response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
        example: 10
      - description: The field by which the data will be ordered
        explode: true
        in: query
        name: sortField
        required: false
        schema:
          type: string
        style: form
        example: tunnelStatus
      - description: Sorting order
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
        example: desc
      - description: Stringified array of filter objects
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
        example: '[{"key":"peer.name","op":"contains","val":"my"}]'
      - description: Response format of returned data
        explode: true
        in: query
        name: response
        required: false
        schema:
          enum:
          - detailed
          - summary
          type: string
        example: summary
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tunnel'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device tunnels information
      tags:
      - Tunnels
      x-swagger-router-controller: Routes
      x-openapi-router-controller: TunnelsController
      x-openapi-router-service: TunnelsService
  /tunnels/notifications:
    put:
      operationId: tunnelsNotificationsPUT
      requestBody:
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/TunnelsNotificationsPut'
      responses:
        "202":
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApplyJobsResponse'
          description: Successful operation
        "204":
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add tunnel specific notifications settings
      tags:
      - Tunnels
      x-swagger-router-controller: Tunnels
      x-openapi-router-controller: TunnelsController
      x-openapi-router-service: TunnelsService
  /devices/{id}/routes:
    get:
      operationId: devicesIdRoutesGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRouteInformation'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device routes information
      tags:
      - Routes
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/routing/ospf:
    get:
      operationId: devicesIdRoutingOSPFGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OspfConfigs'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get OSPF configuration
      tags:
      - Routing
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    put:
      operationId: devicesIdRoutingOSPFPUT
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OspfConfigs'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OspfConfigs'
          description: Successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OspfConfigs'
          description: Operation queued for processing
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify OSPF configuration
      tags:
      - Routing
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/coords:
    put:
      operationId: devicesIdCoordsPUT
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoordsConfigs'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoordsConfigs'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Update device coordinates
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/staticroutes:
    post:
      operationId: devicesIdStaticroutesPOST
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new static route
      tags:
      - Static Routes
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    get:
      operationId: devicesIdStaticroutesGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StaticRoute'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device static routes information
      tags:
      - Static Routes
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/staticroutes/{route}:
    delete:
      operationId: devicesIdStaticroutesRouteDELETE
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Route to delete
        explode: false
        in: path
        name: route
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete static route
      tags:
      - Static Routes
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    patch:
      operationId: devicesIdStaticroutesRoutePATCH
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Route to modify
        explode: false
        in: path
        name: route
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify static route
      tags:
      - Static Routes
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/dhcp:
    post:
      operationId: devicesIdDhcpPOST
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dhcp'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add DHCP server
      tags:
      - DHCP
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    get:
      operationId: devicesIdDhcpGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dhcp'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device DHCP information
      tags:
      - DHCP
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/dhcp/{dhcpId}:
    get:
      operationId: devicesIdDhcpDhcpIdGET
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the DHCP to get
        explode: false
        in: path
        name: dhcpId
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dhcp'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get DHCP by ID
      tags:
      - DHCP
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    delete:
      operationId: devicesIdDhcpDhcpIdDELETE
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the DHCP to delete
        explode: false
        in: path
        name: dhcpId
        required: true
        schema:
          type: string
        style: simple
      - description: Force delete
        explode: false
        in: query
        name: force
        required: false
        schema:
          enum:
          - yes
          - no
          type: string
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "202":
          description: Successful operation
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete DHCP
      tags:
      - DHCP
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    put:
      operationId: devicesIdDhcpDhcpIdPUT
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the DHCP to modify
        explode: false
        in: path
        name: dhcpId
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dhcp'
          description: Successful operation
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify DHCP
      tags:
      - DHCP
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    patch:
      operationId: devicesIdDhcpDhcpIdPATCH
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the DHCP to modify
        explode: false
        in: path
        name: dhcpId
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dhcp'
          description: Successful operation
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: ReApply DHCP
      tags:
      - DHCP
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/statistics:
    get:
      operationId: devicesStatisticsGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Start time to get statistics for
        explode: true
        in: query
        name: startTime
        required: false
        schema:
          type: integer
      - description: End time to get statistics for
        explode: true
        in: query
        name: endTime
        required: false
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceStatistics'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve devices statistics information
      tags:
      - Statistics
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/statistics:
    get:
      operationId: devicesIdStatisticsGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Interface Dev Id to filter
        explode: true
        in: query
        name: ifnum
        required: false
        schema:
          type: string
      - description: Start time to get statistics for
        explode: true
        in: query
        name: startTime
        required: false
        schema:
          type: integer
      - description: End time to get statistics for
        explode: true
        in: query
        name: endTime
        required: false
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceStatistics'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device statistics information
      tags:
      - Statistics
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/tunnels:
    get:
      operationId: devicesIdTunnelsGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tunnel'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device tunnels
      tags:
      - Tunnels
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/tunnelstats:
    get:
      operationId: devicesIdTunnelStatisticsGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Tunnel Number to filter
        explode: true
        in: query
        name: tunnelnum
        required: false
        schema:
          type: string
          pattern: "^[0-9]*$"
      - description: Start time to get statistics for
        explode: true
        in: query
        name: startTime
        required: false
        schema:
          type: integer
      - description: End time to get statistics for
        explode: true
        in: query
        name: endTime
        required: false
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TunnelStatistics'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device tunnel statistics information
      tags:
      - Statistics
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/health:
    get:
      operationId: devicesIdHealthGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Start time to get statistics for
        explode: true
        in: query
        name: startTime
        required: false
        schema:
          type: integer
      - description: End time to get statistics for
        explode: true
        in: query
        name: endTime
        required: false
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceHealth'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device tunnel statistics information
      tags:
      - Statistics
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/interfaces/{interfaceId}/action:
    post:
      operationId: devicesIdInterfacesIdActionPOST
      parameters:
      - description: Numeric ID of the device to perform an operation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The interface name to save configuration for
        explode: false
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceOperationReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceOperationResponse'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Perform Interface Operation
      tags:
      - Interface
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/interfaces/{interfaceId}/status:
    get:
      operationId: devicesIdInterfacesIdStatusGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of interface to fetch information about
        explode: false
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Indicator if need to take data from the device
        in: query
        name: getEdgeData
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceStatus'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get interface info
      tags:
      - Interface
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/logs:
    get:
      operationId: devicesIdLogsGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Filter to be applied
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - fwagent
          - syslog
          - dhcp
          - vpp
          - ospf
          - hostapd
          - agentui
          - application_ids
          - com.flexiwan.remotevpn
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceLog'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device logs information
      tags:
      - Logs
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/bgp/status:
    get:
      operationId: devicesIdBgpStatusGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Indicator if need to take data from the device
        in: query
        name: getEdgeData
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceBgpStatus'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device BGP information
      tags:
      - BGP
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/traces:
    get:
      operationId: devicesIdPacketTracesGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of packets to capture
        explode: true
        in: query
        name: packets
        required: false
        schema:
          type: integer
        style: form
      - description: The wait time (sec) for packets to capture
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicePacketTraces'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device logs information
      tags:
      - Logs
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/apply:
    post:
      operationId: devicesIdApplyPOST
      parameters:
      - description: Numeric ID of the Device to start
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommand'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyJobsResponse'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Execute an action on the device side
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/send:
    post:
      operationId: devicesIdSendPOST
      parameters:
      - description: Numeric ID of the Device to start
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSendRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSendResponse'
          description: Execution Applied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Execute a Linux command on the device side
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /jobs:
    get:
      operationId: jobsGET
      parameters:
      - description: A filter on the job status
        explode: true
        in: query
        name: status
        required: true
        schema:
          enum:
          - all
          - complete
          - failed
          - inactive
          - delayed
          - active
          type: string
        style: form
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
        example: 10
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
        example: 10
      - description: Stringified array of filter objects
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
        example: '[{"key":"data.message.title","op":"contains","val":"upgrade"}]'
      - description: A filter on specific job ids (comma separated)
        explode: true
        in: query
        name: ids
        required: false
        schema:
          type: string
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Job'
                type: array
                x-content-type: application/json
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all jobs
      tags:
      - Jobs
      x-swagger-router-controller: Jobs
      x-openapi-router-controller: JobsController
      x-openapi-router-service: JobsService
    delete:
      operationId: jobsDELETE
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsDeleteRequest'
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete jobs by IDs or matching the filter
      tags:
      - Jobs
      x-swagger-router-controller: Jobs
      x-openapi-router-controller: JobsController
      x-openapi-router-service: JobsService
  /jobs/{id}:
    get:
      operationId: jobsIdGET
      parameters:
      - description: Numeric ID of the Job to get
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get job by ID
      tags:
      - Jobs
      x-swagger-router-controller: Jobs
      x-openapi-router-controller: JobsController
      x-openapi-router-service: JobsService
    delete:
      operationId: jobsIdDELETE
      parameters:
      - description: Numeric ID of the Job to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a job
      tags:
      - Jobs
      x-swagger-router-controller: Jobs
      x-openapi-router-controller: JobsController
      x-openapi-router-service: JobsService
  /notifications:
    get:
      operationId: notificationsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
        example: 10
      - description: The number of items to return, total records count added to the 'records-total' header of the response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
        example: 10
      - description: The field by which the data will be ordered
        explode: true
        in: query
        name: sortField
        required: false
        schema:
          type: string
        style: form
        example: time
      - description: Sorting order
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
        example: desc
      - description: Stringified array of filter objects
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
        example: '[{"key":"time","op":"<","val":"2022-01-26"}]'
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Operation to be executed
        explode: true
        in: query
        name: op
        required: false
        schema:
          type: string
      - description: Filter by status to be executed
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Notification'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Notifications
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
    put:
      operationId: notificationsPUT
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsPutRequest'
      responses:
        "204":
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify notifications
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
    delete:
      operationId: notificationsDELETE
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsDeleteRequest'
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Delete all notifications matching the filter
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /notifications/{id}:
    put:
      operationId: notificationsIdPUT
      parameters:
      - description: Numeric ID of the notification to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description:  Numeric ID of the Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsIDPutRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify notification
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /notificationsConf:
    get:
      operationId: notificationsConfGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description:  Account to be filtered by
        explode: true
        in: query
        name: account
        required: false
        schema:
          type: string
      - description:  Group to be filtered by
        explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationsConf'
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get the Notifications configuration
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
    put:
      operationId: notificationsConfPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsConfPut'
      responses:
        "202":
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApplyJobsResponse'
          description: Successful operation
        "204":
          description: Successful operation
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary:  Modify the rules of notifications
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /notificationsConf/emails:
    get:
      operationId: notificationsConfEmailsGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description:  Account to be filtered by
        explode: true
        in: query
        name: account
        required: false
        schema:
          type: string
      - description:  Group to be filtered by
        explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmailNotificationsConf'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get the Notification emails configuration
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
    put:
      operationId: notificationsConfEmailsPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailNotificationsConfPut'
      responses:
        "204":
          description: Successful operation
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Modify the Notification emails configuration
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /notificationsConf/webhooks:
    get:
      operationId: notificationsConfWebhookGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description:  Account to be filtered by
        explode: true
        in: query
        name: account
        required: false
        schema:
          type: string
      - description:  Group to be filtered by
        explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookSettings'
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get the Notifications webhook configuration
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
    put:
      operationId: notificationsConfWebhookPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSettingsPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookSettings'
                x-content-type: application/json
          description: Successful operation
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Modify the Notifications webhook configuration
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /notificationsConf/default:
    get:
      operationId: notificationsConfDefaultGET
      parameters:
      - description:  Account to be filtered by
        explode: true
        in: query
        name: account
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationsDefaultConf'
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get the account/system default notifications configuration
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
    put:
      operationId: notificationsConfDefaultPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsConfDefaultPut'
      responses:
        "202":
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApplyJobsResponse'
          description: Successful operation
        "204":
          description: Successful operation
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary:  Set notifications settings as the default for a given account
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /members:
    get:
      operationId: membersGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Members
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
    post:
      operationId: membersPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Member has been added
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Create new member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
  /members/{id}:
    get:
      operationId: membersIdGET
      parameters:
      - description: Numeric ID of the Member to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get Member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
    put:
      operationId: membersIdPUT
      parameters:
      - description: Numeric ID of the account to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
    delete:
      operationId: membersIdDELETE
      parameters:
      - description: Numeric ID of the Member to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
  /members/{id}/resetMfa:
    get:
      operationId: membersIdResetMfaGET
      parameters:
      - description: Numeric ID of the Member to reset for
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Reset Member Two-Factor authentication
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
  /members/options/{type}:
    get:
      operationId: membersOptionsTypeGET
      parameters:
      - description: Numeric ID of the Member to retrieve
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get Member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
  /accounts:
    get:
      operationId: accountsGET
      parameters:
        - description: The number of items to skip before starting to collect the result
            set
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: The numbers of items to return
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Accounts
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
  /accounts/select:
    post:
      operationId: accountsSelectPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSelectRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account has been selected
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Select account
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
  /accounts/{id}:
    get:
      operationId: accountsIdGET
      parameters:
      - description: Numeric ID of the Account to retrieve information
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Retrieve account information
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
    put:
      operationId: accountsIdPUT
      parameters:
      - description: Numeric ID of the Account to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Modify account information
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
  /accounts/{id}/subscription-status:
    get:
      operationId: accountsIdSubscriptionStatusGET
      parameters:
      - description: Numeric ID of the Account to retrieve information
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Retrieve account information, account response with subscription status
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
  /organizations:
    get:
      operationId: organizationsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all organizations
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
    post:
      operationId: organizationsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add new organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
  /organizations/select:
    post:
      operationId: organizationsSelectPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationSelectRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Select organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
  /organizations/{id}:
    get:
      operationId: organizationsIdGET
      parameters:
      - description: Numeric ID of the Organization to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get Organization by ID
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
    delete:
      operationId: organizationsIdDELETE
      parameters:
      - description: Numeric ID of the Organization to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
    put:
      operationId: organizationsIdPUT
      parameters:
      - description: Numeric ID of the Organization to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
  /organizations/summary:
    get:
      operationId: organizationsSummaryGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSummary'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get Organization Summary by ID
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
  /invoices:
    get:
      operationId: invoicesGET
      parameters:
      - description: The next items to collect next, should be the offset received on previous iteration
        explode: true
        in: query
        name: offsetPos
        required: false
        schema:
          type: string
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Billing'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all invoices
      tags:
      - Invoices
      x-swagger-router-controller: Billing
      x-openapi-router-controller: BillingController
      x-openapi-router-service: BillingService
  /coupons:
    post:
      operationId: couponsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add new coupon
      tags:
      - Coupons
      x-swagger-router-controller: Billing
      x-openapi-router-controller: BillingController
      x-openapi-router-service: BillingService
  /pathlabels:
    get:
      operationId: pathlabelsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PathLabel'
                type: array
                x-content-type: application/json
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Path labels
      tags:
      - Path Labels
      x-swagger-router-controller: PathLabels
      x-openapi-router-controller: PathLabelsController
      x-openapi-router-service: PathLabelsService
    post:
      operationId: pathlabelsPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathLabelRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathLabel'
          description: Path label created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add a new Path label
      tags:
      - Path Labels
      x-swagger-router-controller: PathLabels
      x-openapi-router-controller: PathLabelsController
      x-openapi-router-service: PathLabelsService
  /pathlabels/{id}:
    get:
      operationId: pathlabelsIdGET
      parameters:
      - description: Numeric ID of the Path label to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathLabel'
                x-content-type: application/json
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get a Path label by id
      tags:
      - Path Labels
      x-swagger-router-controller: PathLabels
      x-openapi-router-controller: PathLabelsController
      x-openapi-router-service: PathLabelsService
    put:
      operationId: pathlabelsIdPUT
      parameters:
      - description: Numeric ID of the Path label to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathLabelRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathLabel'
          description: A new Path label created
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathLabel'
          description: Path label was modified
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify a Path label
      tags:
      - Path Labels
      x-swagger-router-controller: PathLabels
      x-openapi-router-controller: PathLabelsController
      x-openapi-router-service: PathLabelsService
    delete:
      operationId: pathlabelsIdDELETE
      parameters:
      - description: Numeric ID of the Path label to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a Path label
      tags:
      - Path Labels
      x-swagger-router-controller: PathLabels
      x-openapi-router-controller: PathLabelsController
      x-openapi-router-service: PathLabelsService

  /mlpolicies:
    get:
      operationId: mlpoliciesGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MLPolicy'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Multi Link policies
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
    post:
      operationId: mlpoliciesPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLPolicy'
          description: Multi Link policy created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add a new Multi Link policy
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
  /mlpolicies/{id}:
    get:
      operationId: mlpoliciesIdGET
      parameters:
      - description: Numeric ID of the Multi Link policy to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLPolicy'
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get a Multi Link policy by id
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
    put:
      operationId: mlpoliciesIdPUT
      parameters:
      - description: Numeric ID of the Multi Link policy to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLPolicy'
          description: A new Multi Link created
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLPolicy'
          description: Multi Link was modified
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify a Multi Link policy
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
    delete:
      operationId: mlpoliciesIdDELETE
      parameters:
      - description: Numeric ID of the Multi Link policy to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a Multi Link policy
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
  /mlpolicies/list:
    get:
      operationId: mlpoliciesListGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MLPolicyList'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Multi Link policies names and IDs only
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
  /mlpolicies/meta:
    get:
      operationId: mlpoliciesMetaGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MLPolicyMetaData'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all multi link policies metadata
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
  /appidentifications:
    get:
      operationId: appIdentificationsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppIdentification'
                type: object
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all app identifications
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
    post:
      operationId: appIdentificationsPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppIdentification'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new app identification
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /appidentifications/{id}:
    delete:
      operationId: appIdentificationsIdDELETE
      parameters:
      - description: Numeric ID of the app identification to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete app identification
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /appidentifications/imported/{id}:
    get:
      operationId: appIdentificationsIdGET
      parameters:
      - description: App identification id to retrieve
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get app identification by id
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
    put:
      operationId: appIdentificationsIdPUT
      parameters:
      - description: Numeric ID of the app identification to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppIdentImpCustReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Created
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify app identification
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /appidentifications/custom/{id}:
    get:
      operationId: appIdentificationsCustomIdGET
      parameters:
      - description: App identification id to retrieve
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get app identification by id
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
    put:
      operationId: appIdentificationsCustomIdPUT
      parameters:
      - description: Numeric ID of the app identification to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppIdentification'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify app identification
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /appidentifications/imported/{id}/reset:
    put:
      operationId: appIdentificationsIdResetPUT
      parameters:
      - description: Numeric ID of the app identification to reset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppIdentification'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Created
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Reset imported app identification to its default values
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /appidentifications/installed:
    get:
      operationId: appIdentificationsInstalledGET
      parameters:
      - description: Devices app identification installed on
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstalledAppIdentifications'
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all installed app identifications
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /firewallpolicies:
    get:
      operationId: firewallPoliciesGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FirewallPolicy'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Firewall policies
      tags:
      - Firewall Policies
      x-swagger-router-controller: FirewallPolicies
      x-openapi-router-controller: FirewallPoliciesController
      x-openapi-router-service: FirewallPoliciesService
    post:
      operationId: firewallPoliciesPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicy'
          description: Firewall policy created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add a new Firewall policy
      tags:
      - Firewall Policies
      x-swagger-router-controller: FirewallPolicies
      x-openapi-router-controller: FirewallPoliciesController
      x-openapi-router-service: FirewallPoliciesService
  /firewallpolicies/{id}:
    get:
      operationId: firewallPoliciesIdGET
      parameters:
      - description: Numeric ID of the Firewall policy to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicy'
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get a Firewall policy by id
      tags:
      - Firewall Policies
      x-swagger-router-controller: FirewallPolicies
      x-openapi-router-controller: FirewallPoliciesController
      x-openapi-router-service: FirewallPoliciesService
    put:
      operationId: firewallPoliciesIdPUT
      parameters:
      - description: Numeric ID of the Firewall policy to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicy'
          description: A new Firewall created
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicy'
          description: Firewall was modified
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify a Firewall policy
      tags:
      - Firewall Policies
      x-swagger-router-controller: FirewallPolicies
      x-openapi-router-controller: FirewallPoliciesController
      x-openapi-router-service: FirewallPoliciesService
    delete:
      operationId: firewallPoliciesIdDELETE
      parameters:
      - description: Numeric ID of the Firewall policy to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a Firewall policy
      tags:
      - Firewall Policies
      x-swagger-router-controller: FirewallPolicies
      x-openapi-router-controller: FirewallPoliciesController
      x-openapi-router-service: FirewallPoliciesService
  /firewallpolicies/list:
    get:
      operationId: firewallPoliciesListGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FirewallPolicyList'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Firewall policies names and IDs only
      tags:
      - Firewall Policies
      x-swagger-router-controller: FirewallPolicies
      x-openapi-router-controller: FirewallPoliciesController
      x-openapi-router-service: FirewallPoliciesService
  /firewallpolicies/meta:
    get:
      operationId: firewallPoliciesMetaGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FirewallPolicyMetaData'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Firewall metadata
      tags:
      - Firewall Policies
      x-swagger-router-controller: FirewallPolicies
      x-openapi-router-controller: FirewallPoliciesController
      x-openapi-router-service: FirewallPoliciesService
  /qosPolicies:
    get:
      operationId: qosPoliciesGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/QOSPolicy'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all QOS policies
      tags:
      - QOS Policies
      x-swagger-router-controller: QOSPolicies
      x-openapi-router-controller: QOSPoliciesController
      x-openapi-router-service: QOSPoliciesService
    post:
      operationId: qosPoliciesPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QOSPolicy'
          description: QOS policy created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add a new QOS policy
      tags:
      - QOS Policies
      x-swagger-router-controller: QOSPolicies
      x-openapi-router-controller: QOSPoliciesController
      x-openapi-router-service: QOSPoliciesService
  /qosPolicies/{id}:
    get:
      operationId: qosPoliciesIdGET
      parameters:
      - description: Numeric ID of the QOS policy to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QOSPolicy'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get a QOS policy by id
      tags:
      - QOS Policies
      x-swagger-router-controller: QOSPolicies
      x-openapi-router-controller: QOSPoliciesController
      x-openapi-router-service: QOSPoliciesService
    put:
      operationId: qosPoliciesIdPUT
      parameters:
      - description: Numeric ID of the QOS policy to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QOSPolicy'
          description: A new QOS Policy created
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QOSPolicy'
          description: The QOS Policy was modified
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify a QOS policy
      tags:
      - QOS Policies
      x-swagger-router-controller: QOSPolicies
      x-openapi-router-controller: QOSPoliciesController
      x-openapi-router-service: QOSPoliciesService
    delete:
      operationId: qosPoliciesIdDELETE
      parameters:
      - description: Numeric ID of the QOS policy to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a QOS policy
      tags:
      - QOS Policies
      x-swagger-router-controller: QOSPolicies
      x-openapi-router-controller: QOSPoliciesController
      x-openapi-router-service: QOSPoliciesService
  /qosPolicies/list:
    get:
      operationId: qosPoliciesListGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/QOSPolicyList'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all QOS policies names and IDs only
      tags:
      - QOS Policies
      x-swagger-router-controller: QOSPolicies
      x-openapi-router-controller: QOSPoliciesController
      x-openapi-router-service: QOSPoliciesService
  /qosPolicies/meta:
    get:
      operationId: qosPoliciesMetaGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/QOSPolicyMetaData'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all QOS metadata
      tags:
      - QOS Policies
      x-swagger-router-controller: QOSPolicies
      x-openapi-router-controller: QOSPoliciesController
      x-openapi-router-service: QOSPoliciesService
  /qosTrafficMap:
    get:
      operationId: qosTrafficMapGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QOSTrafficMap'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get QOS traffic map
      tags:
      - QOS Policies
      x-swagger-router-controller: QOSPolicies
      x-openapi-router-controller: QOSPoliciesController
      x-openapi-router-service: QOSPoliciesService
    put:
      operationId: qosTrafficMapPUT
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosTrafficMapRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QOSTrafficMap'
          description: The QOS traffic map updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Update QOS traffic map
      tags:
      - QOS Policies
      x-swagger-router-controller: QOSPolicies
      x-openapi-router-controller: QOSPoliciesController
      x-openapi-router-service: QOSPoliciesService
  /appstore:
    get:
      operationId: appstoreGET
      parameters:
      - description: Stringified array of filter objects
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all repository applications
      tags:
      - Applications
      x-swagger-router-controller: Applications
      x-openapi-router-controller: ApplicationsController
      x-openapi-router-service: ApplicationsService
  /appstore/purchase/{id}:
    post:
      operationId: appstorePurchaseIdPOST
      parameters:
      - description: Application store Id to purchase
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasedApplication'
          x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Purchase an application
      tags:
      - Applications
      x-swagger-router-controller: Applications
      x-openapi-router-controller: ApplicationsController
      x-openapi-router-service: ApplicationsService
  /appstore/purchased:
    get:
      operationId: appstorePurchasedGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Type of returned data
        explode: true
        in: query
        name: responseType
        required: false
        schema:
          enum:
          - summary
          type: string
      - description: Stringified array of filter objects
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PurchasedApplication'
                type: array
          x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all purchased applications
      tags:
      - Applications
      x-swagger-router-controller: Applications
      x-openapi-router-controller: ApplicationsController
      x-openapi-router-service: ApplicationsService
  /appstore/purchased/{id}:
    get:
      operationId: appstorePurchasedIdGET
      parameters:
      - description: Purchased application id
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasedApplication'
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get purchased application
      tags:
      - Applications
      x-swagger-router-controller: Applications
      x-openapi-router-controller: ApplicationsController
      x-openapi-router-service: ApplicationsService
    put:
      operationId: appstorePurchasedIdPUT
      parameters:
      - description: Purchased application id to update
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchasedApplicationConfigurationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasedApplication'
          x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Update application
      tags:
      - Applications
      x-swagger-router-controller: Applications
      x-openapi-router-controller: ApplicationsController
      x-openapi-router-service: ApplicationsService
    delete:
      operationId: appstorePurchasedIdDELETE
      parameters:
      - description: Purchased application id to remove
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Remove application from an organization
      tags:
      - Applications
      x-swagger-router-controller: Applications
      x-openapi-router-controller: ApplicationsController
      x-openapi-router-service: ApplicationsService
  /appstore/purchased/{id}/status:
    get:
      operationId: appstorePurchasedIdStatusGet
      parameters:
      - description: Purchased application id to get status for
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get application Status
      tags:
      - Applications
      x-swagger-router-controller: Applications
      x-openapi-router-controller: ApplicationsController
      x-openapi-router-service: ApplicationsService
  /appstore/purchased/{id}/action:
    post:
      operationId: appstorePurchasedIdActionPOST
      parameters:
      - description: Purchased application id to operate on
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationOperationReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasedApplication'
          x-content-type: application/json
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Perform application Operation
      tags:
      - Applications
      x-swagger-router-controller: Applications
      x-openapi-router-controller: ApplicationsController
      x-openapi-router-service: ApplicationsService
  /vrrp:
    get:
      operationId: vrrpGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Device ID to be filtered by
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VrrpGroupListItem'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve VRRP groups
      tags:
      - VRRP
      x-swagger-router-controller: Vrrp
      x-openapi-router-controller: VrrpController
      x-openapi-router-service: VrrpService
    post:
      operationId: vrrpPOST
      parameters:
      - description: Organization to create VRRP group for
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrrpGroup'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  vrrpGroup:
                    $ref: '#/components/schemas/VrrpGroupListItem'
                  metadata:
                    $ref: '#/components/schemas/VrrpGroupPutPostResponse'
          description: VRRP has been added
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Create a new VRRP Group
      tags:
      - VRRP
      x-swagger-router-controller: Vrrp
      x-openapi-router-controller: VrrpController
      x-openapi-router-service: VrrpService
  /vrrp/status:
    get:
      operationId: vrrpStatusGET
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrrpStatus'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve VRRP Status
      tags:
      - VRRP
      x-swagger-router-controller: Vrrp
      x-openapi-router-controller: VrrpController
      x-openapi-router-service: VrrpService
  /vrrp/{id}:
    get:
      operationId: vrrpIdGET
      parameters:
      - description: VRRP Group ID to retrieve
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to get VRRP group from
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrrpGroup'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve VRRP group
      tags:
      - VRRP
      x-swagger-router-controller: Vrrp
      x-openapi-router-controller: VrrpController
      x-openapi-router-service: VrrpService
    put:
      operationId: vrrpIdPUT
      parameters:
      - description: VRRP Group ID to update
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to update the VRRP group for
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrrpGroup'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  vrrpGroup:
                    $ref: '#/components/schemas/VrrpGroup'
                  metadata:
                    $ref: '#/components/schemas/VrrpGroupPutPostResponse'
          description: VRRP has been added
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Update an existing VRRP Group
      tags:
      - VRRP
      x-swagger-router-controller: Vrrp
      x-openapi-router-controller: VrrpController
      x-openapi-router-service: VrrpService
    delete:
      operationId: vrrpIdDELETE
      parameters:
      - description: VRRP Group ID to remove
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to delete VRRP group from
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Remove VRRP Group
      tags:
      - VRRP
      x-swagger-router-controller: Vrrp
      x-openapi-router-controller: VrrpController
      x-openapi-router-service: VrrpService
  /vrrp/deviceVrrpInterfaces:
    get:
      operationId: vrrpDeviceVrrpInterfacesGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Virtual IP of VRRP to check for the overlapping devices
        explode: true
        in: query
        name: virtualIp
        required: true
        schema:
          type: string
          format: ipv4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VrrpDeviceInterfacesResponse'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve devices and interface that overlapping with VRRP virtual IP
      tags:
      - VRRP
      x-swagger-router-controller: Vrrp
      x-openapi-router-controller: VrrpController
      x-openapi-router-service: VrrpService

components:
  responses:
    NotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
    ForbiddenError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
  schemas:
    RestServers:
      example: [https://manage.flexiwan.com,https://org.flexiwan.com]
      # properties:
      items:
        type: string
      type: array
    Version:
      properties:
        version:
          type: string
      required:
      - version
      type: object
    AccessToken:
      example:
        isValid: true
        name: name
        group: ''
        to: account
        role: owner
        _id: id
        token: token
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        token:
          type: string
        group:
          type: string
        to:
          type: string
        role:
          type: string
        isValid:
          default: true
          type: boolean
      type: object
    AccessTokenRequest:
      example:
        name: name
        accessKeyPermissionTo: account
        accessKeyEntity: 5deaeae628e84b2bac6a4e37
        accessKeyRole: viewer
        validityEntity: Default
      properties:
        name:
          type: string
        accessKeyPermissionTo:
          type: string
        accessKeyEntity:
          type: string
        accessKeyRole:
          type: string
        validityEntity:
          type: string
      type: object
    MemberRequest:
      example:
        userId: userId
        userJobTitle: userJobTitle
        userEntity: userEntity
        userLastName: userLastName
        userFirstName: userFirstName
        userRole: viewer
        email: email
        userPermissionTo: account
      properties:
        email:
          type: string
        userId:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        userJobTitle:
          type: string
        userPermissionTo:
          enum:
          - account
          - group
          - organization
          type: string
        userEntity:
          type: string
        userRole:
          enum:
          - viewer
          - manager
          - owner
          type: string
      type: object
    Token:
      example:
        _id: id
        org: org
        name: name
        token: token
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        org:
          type: string
        name:
          type: string
        token:
          type: string
        createdAt:
          type: string
      type: object
    TokenRequest:
      example:
        name: name
      properties:
        name:
          type: string
        description:
          type: string
        server:
          type: string
      type: object
    PurchasedApplicationConfigurationRequest:
      type: object
    Application:
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        creator:
          type: string
        cost:
          type: number
        description:
          type: string
        identifier:
          type: string
        versions:
          items:
            $ref: '#/components/schemas/ApplicationVersion'
          type: array
    ApplicationVersion:
      properties:
        version:
          type: string
        components:
          type: object
          properties:
            agent:
              type: object
            manage:
              type: object
    PurchasedApplication:
      example:
        _id: _id
        app: library object
        org: organization object
        installedVersion: 1.2.3.5
        configuration: object
      properties:
        _id:
          type: string
        app:
          type: string
        org:
          type: string
        installedVersion:
          type: string
        configuration:
          type: object
    AppIdentificationRules:
      example:
        ip: 127.0.0.1
        ports: 42
        protocol: tcp
      properties:
        ip:
          type: string
        ports:
          type: string
        protocol:
          enum:
          - tcp
          - udp
          type: string
      type: object
    AppIdentification:
      example:
        _id: _id
        name: custom:app-name
        description: app identification description
        category: internet
        serviceClass: oam
        importance: high
        rules: [
          {ip: "127.0.0.1"},
          {ports: "42"},
          {ports: "128-129"},
          {ip: "127.0.0.1", ports: "42", protocol: "tcp"}
        ]
      properties:
        _id:
          maxLength: 24
          minLength: 24
        id:
          maxLength: 24
          minLength: 1
        name:
          maxLength: 30
          minLength: 2
          type: string
        description:
          maxLength: 128
          type: string
        category:
          maxLength: 30
          minLength: 2
          type: string
        serviceClass:
          maxLength: 30
          minLength: 2
          type: string
        importance:
          enum:
          - high
          - medium
          - low
          type: string
        rules:
          items:
            $ref: '#/components/schemas/AppIdentificationRules'
          type: array
      type: object
    AppIdentImpCustReq:
      example:
        category: internet
        serviceClass: oam
        importance: high
      properties:
        category:
          maxLength: 30
          minLength: 2
          type: string
        serviceClass:
          maxLength: 30
          minLength: 2
          type: string
        importance:
          enum:
          - high
          - medium
          - low
          type: string
      type: object
    InstalledAppIdentifications:
      example:
        totalNotUpdated: 3
        devices:
          _id: _id
          updatedAt: Date
          clients: Client List
          status: ok
      properties:
        totalNotUpdated:
          type: integer
        devices:
          items:
            $ref: '#/components/schemas/InstalledApplication'
          type: array
      type: object
    InstalledApplication:
      example:
        _id: _id
        updatedAt: Date
        clients: Client List
        status: ok
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        updatedAt:
          type: string
        clients:
          items:
            type: string
          type: array
        status:
          enum:
          - ok
          - install
          - uninstall
          type: string
      type: object
    Account:
      example:
        _id: _id
        name: name
        country: country
        companyType: companyType
        companyDesc: companyDesc
        isSubscriptionValid: true
        trial_end: 1676591999
        forceMfa: false
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        country:
          maxLength: 2
          type: string
        companyType:
          type: string
          nullable: true
        companyDesc:
          type: string
          nullable: true
        isSubscriptionValid:
          default: true
          type: boolean
        trial_end:
          type: integer
          nullable: true
        forceMfa:
          default: false
          type: boolean
      type: object
    AccountRequest:
      example:
        name: name
        country: country
        companyType: companyType
        companyDesc: companyDesc
        forceMfa: false
      properties:
        name:
          type: string
        country:
          maxLength: 2
          type: string
        companyType:
          type: string
        companyDesc:
          type: string
        forceMfa:
          default: false
          type: boolean
      type: object
    OrganizationRequest:
      example:
        name: name
        description: description
        group: group
        encryptionMethod: ikev2
        vxlanPort: 4789
        tunnelRange: 10.100.0.0
      required:
        - name
        - group
        - encryptionMethod
      properties:
        name:
          type: string
        description:
          type: string
        group:
          type: string
        encryptionMethod:
          enum:
          - none
          - psk
          - ikev2
          type: string
        vxlanPort:
          type: string
        tunnelRange:
          type: string
      type: object
    Organization:
      example:
        name: name
        description: description
        _id: _id
        account: account
        group: group
        encryptionMethod: ikev2
        vxlanPort: 4789
        tunnelRange: 10.100.0.0
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        group:
          type: string
        account:
          type: string
        encryptionMethod:
          enum:
          - none
          - psk
          - ikev2
          type: string
        vxlanPort:
          type: string
        tunnelRange: 
          type: string
      type: object
    OrganizationSummary:
      example:
        _id: _id
        devices:
          connected: 1
          approved: 2
          running: 1
          warning: 0
          total: 2
        tunnels:
          connected: 4
          warning: 1
          unknown: 1
          total: 7
        traffic:
          - month: 1646085600000
            bytes: 128114
            deviceCount: 1
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        devices:
          type: object
        tunnels:
          type: object
        traffic:
          items:
            $ref: '#/components/schemas/OrganizationTraffic'
          type: array
      type: object
    OrganizationTraffic:
      example:
        month: 1646085600000
        bytes: 128114
        deviceCount: 1
      properties:
        month:
          type: integer
        bytes:
          type: integer
        deviceCount:
          type: integer
      type: object
    ApplyJobsResponse:
      properties:
        ids:
          items:
            type: integer
          type: array
        status:
          enum:
          - completed
          - partially completed
          - unknown
          type: string
        message:
          type: string
    JobsDeleteRequest:
      properties:
        ids:
          items:
            type: integer
          type: array
        filters:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
    NotificationRequest:
      properties:
        count:
          minimum: 0
          type: integer
      type: object
    NotificationsIDPutRequest:
      example:
        status: read
        resolve: true
      properties:
        status:
          enum:
          - read
          - unread
          type: string
        resolve:
          enum:
            - true
          type: boolean
    NotificationsPutRequest:
      properties:
        status:
          enum:
          - read
          - unread
          type: string
        resolve:
          type: boolean
        ids:
          items:
            type: string
          type: array
    Notification:
      example:
        status: unread
        _id: 123
        eventType: Running router
        title: Router state change
        createdAt: '2023-09-28T00:32:32.354Z'
        updatedAt: '2023-09-28T00:33:38.238Z'
        targets:
          deviceId: '61055a03b4832c4a6c365179'
          interfaceId: null
          tunnelId: null
        details: Router state changed to "Not running"
        resolved: false
        severity: 'warning'
        count: 1
        emailSent:
          sendingTime: '2023-09-28T00:33:22.238Z'
          rateLimitedCount: 0
        isInfo: false
        org: 123
        account: 456
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        title:
          type: string
        status:
          enum:
          - read
          - unread
          type: string
        time:
          type: string
        device:
          type: string
          nullable: true
        deviceId:
          type: string
          nullable: true
        machineId:
          type: string
        details:
          type: string
      type: object
    NotificationsConf:
      example:
        org: organizationId,
        account: accountId,
        group: groupName
      properties:
        organizationId:
          maxLength: 24
          minLength: 24
          type: string
        accountId:
          maxLength: 24
          minLength: 24
          type: string
        group:
          type: string
      type: object
    NotificationsDefaultConf:
      example:
        account: accountId
      properties:
        accountId:
          maxLength: 24
          minLength: 24
          type: string
      type: object
    EmailNotificationsConf:
      example:
        org: organizationId,
        account: accountId,
        group: groupName
      properties:
        organizationId:
          maxLength: 24
          minLength: 24
          type: string
        accountId:
          maxLength: 24
          minLength: 24
          type: string
        group:
          type: string
      type: object
    EmailNotificationsConfPut:
      example:
        org: organizationId,
        account: accountId,
        group: groupName,
        emailsSigning:
          - _id: "64ecbbf8285b366710693965"
            signedToCritical: true
            signedToWarning: false
            signedToDaily: false
          - _id: "63712196b6c7482ae46ccbc8"
            signedToCritical: false
            signedToWarning: true
            signedToDaily: true
      properties:
        organizationId:
          maxLength: 24
          minLength: 24
          type: string
        accountId:
          maxLength: 24
          minLength: 24
          type: string
        group:
          type: string
        emailsSigning:
          type: array
      type: object
    WebhookSettings:
      example:
        org: organizationId,
        account: accountId,
        group: groupName
      properties:
        organizationId:
          maxLength: 24
          minLength: 24
          type: string
        accountId:
          maxLength: 24
          minLength: 24
          type: string
        group:
          type: string
      type: object
    WebhookSettingsPut:
      example:
        org: organizationId,
        account: accountId,
        group: groupName,
        webHookSettings:
          webhookURL: "https://localhost:7000/webhook"
          sendCriticalAlerts: true
          sendWarningAlerts: false
      properties:
        organizationId:
          maxLength: 24
          minLength: 24
          type: string
        accountId:
          maxLength: 24
          minLength: 24
          type: string
        group:
          type: string
        webHookSettings:
          type: object
          properties:
            'webhookURL':
              type: string
            'sendCriticalAlerts':
              type: boolean
            'sendWarningAlerts':
              type: boolean
      type: object
    NotificationsConfPut:
      example:
        org: organizationId,
        account: accountId,
        group: groupName,
        rules:
          'Device connection':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: device
          'Running router':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: device
          'Link/Tunnel round trip time':
            warningThreshold: 300
            criticalThreshold: 600
            thresholdUnit: ms
            severity: null
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: tunnel
          'Link/Tunnel default drop rate':
            warningThreshold: 5
            criticalThreshold: 20
            thresholdUnit: '%'
            severity: null
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: tunnel
          'Device memory usage':
            warningThreshold: 85
            criticalThreshold: 95
            thresholdUnit: '%'
            severity: null
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: device
          'Hard drive usage':
            warningThreshold: 85
            criticalThreshold: 95
            thresholdUnit: '%'
            severity: null
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: device
          Temperature:
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: 'C°'
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: device
          'Software update':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: warning
            immediateEmail: false
            resolvedAlert: null
            sendWebHook: false
            type: device
          'Internet connection':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: interface
          'Link status':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: interface
          'Missing interface ip':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: interface
          'Pending tunnel':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: tunnel
          'Tunnel connection':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: tunnel
          'Failed self-healing':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: null
            sendWebHook: false
            type: device
          'Static route state':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: null
            sendWebHook: false
            type: device        
      properties:
        organizationId:
          maxLength: 24
          minLength: 24
          type: string
        accountId:
          maxLength: 24
          minLength: 24
          type: string
        group:
          type: string
        rules:
          type: object
          properties:
            'Device connection':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Running router':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Link/Tunnel round trip time':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Link/Tunnel default drop rate':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Device memory usage':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Hard drive usage':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Temperature':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Software update':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Link status':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Missing interface ip':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Pending tunnel':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Tunnel connection':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Internet connection':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Static route state':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Failed self-healing':
              $ref: '#/components/schemas/notificationSettingsSchema'
      type: object
    NotificationsConfDefaultPut:
      example:
        account: accountId
        rules:
          'Device connection':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: device
          'Running router':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: device
          'Link/Tunnel round trip time':
            warningThreshold: 300
            criticalThreshold: 600
            thresholdUnit: ms
            severity: null
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: tunnel
          'Link/Tunnel default drop rate':
            warningThreshold: 5
            criticalThreshold: 20
            thresholdUnit: '%'
            severity: null
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: tunnel
          'Device memory usage':
            warningThreshold: 85
            criticalThreshold: 95
            thresholdUnit: '%'
            severity: null
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: device
          'Hard drive usage':
            warningThreshold: 85
            criticalThreshold: 95
            thresholdUnit: '%'
            severity: null
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: device
          Temperature:
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: 'C°'
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: device
          'Software update':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: warning
            immediateEmail: false
            resolvedAlert: null
            sendWebHook: false
            type: device
          'Internet connection':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: interface
          'Link status':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: interface
          'Missing interface ip':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: interface
          'Pending tunnel':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: tunnel
          'Tunnel connection':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: false
            sendWebHook: false
            type: tunnel
          'Failed self-healing':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: null
            sendWebHook: false
            type: device
          'Static route state':
            warningThreshold: null
            criticalThreshold: null
            thresholdUnit: null
            severity: critical
            immediateEmail: false
            resolvedAlert: null
            sendWebHook: false
            type: device
      properties:
        accountId:
          maxLength: 24
          minLength: 24
          type: string
        rules:
          type: object
          properties:
            'Device connection':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Running router':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Link/Tunnel round trip time':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Link/Tunnel default drop rate':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Device memory usage':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Hard drive usage':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Temperature':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Software update':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Link status':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Missing interface ip':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Pending tunnel':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Tunnel connection':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Internet connection':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Static route state':
              $ref: '#/components/schemas/notificationSettingsSchema'
            'Failed self-healing':
              $ref: '#/components/schemas/notificationSettingsSchema'
      type: object
    NotificationsDeleteRequest:
      properties:
        filters:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
    JobAttempt:
      example:
        max: 7
        made: 5
        remaining: 2
      properties:
        made:
          type: integer
        remaining:
          type: integer
        max:
          type: integer
      type: object
    Job:
      example:
        progress: 1
        created_at: created_at
        _id: 0
        state: 5
        type: type
        priority: 6
        error: error
        attempts:
          max: 7
          made: 5
          remaining: 2
      properties:
        _id:
          type: integer
        type:
          type: string
        data:
          type: object
        result:
          type: object
        priority:
          type: integer
        error:
          type: object
        progress:
          type: string
        state:
          type: string
        created_at:
          type: string
        attempts:
          type: object
      type: object
    DeviceRequest:
      example:
        interfaces:
        - IPv6: IPv6
          PublicIP: PublicIP
          PublicPort: PublicPort
          NatType: NatType
          useStun: useStun
          useFixedPublicPort: useFixedPublicPort
          monitorInternet : monitorInternet
          IPv4: IPv4
          gateway: gateway
          metric: 0
          mtu: 1500
          type: WAN
          MAC: MAC
          dhcp: "no"
          routing: OSPF
          IPv6Mask: "64"
          isAssigned: true
          driver: driver
          IPv4Mask: "24"
          name: name
          devId: devId
          _id: _id
          deviceType: dpdk
          dnsServers: [8.8.8.8, 8.8.4.4]
          dnsDomains: [subdomain.maindomain]
          useDhcpDnsServers: false
          bandwidthMbps:
            tx: 100
            rx: 100
          qosPolicy: null
        - IPv6: IPv6
          PublicIP: PublicIP
          PublicPort: PublicPort
          NatType: NatType
          useStun: useStun
          monitorInternet: monitorInternet
          IPv4: IPv4
          type: WAN
          MAC: MAC
          mtu: 1500
          dhcp: "no"
          routing: OSPF
          IPv6Mask: "64"
          isAssigned: true
          driver: driver
          IPv4Mask: "24"
          name: name
          devId: devId
          _id: _id
          deviceType: dpdk
          bandwidthMbps:
            tx: 4.5
            rx: 10
          qosPolicy: null
        - IPv6: IPv6
          PublicIP: PublicIP
          PublicPort: PublicPort
          NatType: NatType
          useStun: useStun
          monitorInternet: monitorInternet
          IPv4: IPv4
          type: WAN
          MAC: MAC
          mtu: 1500
          dhcp: "yes"
          routing: OSPF
          IPv6Mask: "64"
          isAssigned: true
          driver: cdc_mbim
          IPv4Mask: "24"
          name: name
          devId: devId
          _id: _id
          deviceType: lte
          useDhcpDnsServers: true
        org: org
        isConnected: true
        upgradeSchedule:
          jobQueued: true
          _id: _id
          time: "2019-12-19T12:10:01.667Z"
        description: description
        deviceStatus: deviceStatus
        deviceToken: deviceToken
        labels:
        - labels
        - labels
        site: site
        hostname: host01
        machineId: machineId
        versions:
          agent: agent
          router: router
          device: device
        name: name
        isApproved: true
        staticroutes:
        - destination: destination
          interface: interface
          gateway: gateway
        - destination: destination
          interface: interface
          gateway: gateway
        deviceSpecificRulesEnabled: true
        firewallRules:
        - description: description
          priority: priority
          enabled: enabled
          direction: direction
          status: status
          action: action
        - description: description
          priority: priority
          enabled: enabled
          direction: direction
          status: status
          action: action
        fromToken: fromToken
        account: account
        ipList: ipList
        dhcp: dhcp list
        coords:
        - 46.5
        - 3.6
        routingFilters:
        - name: routingFilterName
          description: description for the filter
          rules:
          - route: 192.168.55.0/24
            action: allow
            nextHop: ''
            priority: 1
          - route: 192.168.66.0/24
            action: deny
            nextHop: 65.65.65.65
            priority: 2
        bgp:
          enable: true
          holdInterval: 90
          keepaliveInterval: 30,
          localASN: 65001
          routerId: 192.168.1.124
          redistributeOspf: true
          neighbors:
          - password: ''
            ip: 192.168.1.250
            remoteASN: 65002
            inboundFilter: routingFilterName
            outboundFilter: routingFilterName
            sendCommunity: both
            multiHop: 1
          custom:
           - command: ip prefix-list NAME permit 172.16.2.0/24
        cpuInfo:
          powerSaving: true
          vppCores: 3
        distro:
          version: 20.04
          codename: focal
      properties:
        machineId:
          type: string
        name:
          type: string
        description:
          type: string
        site:
          type: string
        isApproved:
          type: boolean
        isConnected:
          type: boolean
        hostname:
          type: string
        deviceStatus:
          type: object
        deviceToken:
          type: string
        fromToken:
          type: string
        account:
          type: string
        org:
          type: string
        ipList:
          type: string
        staticroutes:
          items:
            $ref: '#/components/schemas/StaticRoute'
          type: array
        dhcp:
          items:
            $ref: '#/components/schemas/DhcpRequest'
          type: array
        coords:
          items:
            type: number
          type: array
        bgp:
          $ref: '#/components/schemas/BgpConfigs'
        advancedRouting:
          type: object
          properties:
            custom:
              $ref: '#/components/schemas/RoutingCommandsCLI'
        routingFilters:
          items:
            $ref: '#/components/schemas/RoutingFilter'
          type: array
        upgradeSchedule:
          $ref: '#/components/schemas/UpgradeSchedule'
        labels:
          items:
            type: string
          type: array
        interfaces:
          items:
            $ref: '#/components/schemas/Interface'
          type: array
        deviceSpecificRulesEnabled:
          type: boolean
        firewallRules:
          items:
            $ref: '#/components/schemas/FirewallRuleRequest'
          type: array
        versions:
          $ref: '#/components/schemas/DeviceVersion'
        cpuInfo:
          $ref: '#/components/schemas/DeviceCpuInfo'
        distro:
          $ref: '#/components/schemas/DeviceDistro'
      type: object
    OrganizationInfo:
      example:
        vxlanPort: 4789
      properties:
        vxlanPort:
          type: string
      type: object
    Device:
      example:
        interfaces:
        - IPv6: IPv6
          PublicIP: PublicIP
          PublicPort: PublicPort
          NatType: NatType
          useStun: true
          useFixedPublicPort: false
          monitorInternet: true
          internetAccess: 'yes'
          linkStatus: 'up'
          IPv4: IPv4
          type: WAN
          gateway: gateway
          metric: 0
          mtu: 1500
          MAC: MAC
          dhcp: "no"
          routing: OSPF
          IPv6Mask: "64"
          isAssigned: true
          driver: driver
          IPv4Mask: "24"
          name: name
          devId: devId
          _id: _id
          pathlabels: path labels list
        - IPv6: IPv6
          PublicIP: PublicIP
          PublicPort: PublicPort
          NatType: NatType
          useStun: true
          useFixedPublicPort: false
          monitorInternet: true
          internetAccess: 'no'
          linkStatus: 'down'
          IPv4: IPv4
          type: WAN
          gateway: gateway
          metric: 0
          mtu: 1500
          MAC: MAC
          dhcp: "no"
          routing: OSPF
          IPv6Mask: "64"
          isAssigned: true
          driver: driver
          IPv4Mask: "24"
          name: name
          devId: devId
          _id: _id
          pathlabels: path labels list
        org: org
        isConnected: true
        upgradeSchedule:
          jobQueued: true
          _id: _id
          time: "2019-12-19T12:10:01.667Z"
        description: description
        deviceStatus: deviceStatus
        deviceToken: deviceToken
        labels:
        - labels
        - labels
        machineId: machineId
        site: site
        hostname: host01
        versions:
          agent: agent
          router: router
          device: device
          vpp: vpp
          frr: frr
        name: name
        _id: _id
        isApproved: true
        applications:
        - app: app
          status: status
        staticroutes:
        - id: 1
          destination: 20.20.0.0
          gateway: 20.20.0.1
          interface: eth0
        - id: 2
          destination: 10.10.0.0
          gateway: 10.10.0.1
          interface: eth1
        deviceSpecificRulesEnabled: true
        firewallRules:
        - description: description
          direction: outbound
          enabled: true
          action: allow
        - description: description
          direction: inbound
          enabled: false
          action: deny
        fromToken: fromToken
        account: account
        ipList: ipList
        dhcp: dhcp list
        coords:
        - 40.4
        - 5.7
        sync: device sync status
        routingFilters:
        - routingFilter
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        machineId:
          type: string
        name:
          type: string
        description:
          type: string
        site:
          type: string
        isApproved:
          type: boolean
        isConnected:
          type: boolean
        hostname:
          type: string
        deviceStatus:
          type: object
        deviceToken:
          type: string
        fromToken:
          type: string
        account:
          type: string
        org:
          type: string
        orgInfo:
          $ref: '#/components/schemas/OrganizationInfo'
        ipList:
          type: string
        staticroutes:
          items:
            $ref: '#/components/schemas/StaticRoute'
          type: array
        dhcp:
          items:
            $ref: '#/components/schemas/Dhcp'
          type: array
        routingFilters:
          items:
            $ref: '#/components/schemas/RoutingFilter'
          type: array
        coords:
          items:
            type: number
          type: array
        upgradeSchedule:
          $ref: '#/components/schemas/UpgradeSchedule'
        labels:
          items:
            type: string
          type: array
        interfaces:
          items:
            $ref: '#/components/schemas/Interface'
          type: array
        deviceSpecificRulesEnabled:
          type: boolean
        firewallRules:
          items:
            $ref: '#/components/schemas/FirewallRule'
          type: array
        versions:
          $ref: '#/components/schemas/DeviceVersion'
        cpuInfo:
          $ref: '#/components/schemas/DeviceCpuInfo'
        sync:
          $ref: '#/components/schemas/DeviceSyncStatus'
        pendingNotifications:
          type: integer
      type: object
    UpgradeSchedule:
      example:
        jobQueued: true
        _id: _id
        time: "2019-12-19T12:10:01.667Z"
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        time:
          type: string
          nullable: true
        jobQueued:
          type: boolean
      type: object
    Interface:
      example:
        IPv6: IPv6
        PublicIP: PublicIP
        PublicPort: PublicPort
        NatType: NatType
        useStun: useStun
        monitorInternet: true
        internetAccess: 'yes'
        linkStatus: 'up'
        IPv4: IPv4
        type: WAN
        MAC: MAC
        gateway: gateway
        metric: 0
        mtu: 1500
        dhcp: "no"
        routing: OSPF
        IPv6Mask: "64"
        isAssigned: true
        driver: driver
        IPv4Mask: "24"
        name: name
        devId: devId
        _id: _id
        pathlabels: path labels list
        dnsServers: [8.8.8.8, 8.8.4.4]
        dnsDomains: [subdomain.maindomain]
        isPublicAddressRateLimited: false
        bandwidthMbps:
          tx: 100
          rx: 100
        qosPolicy: null
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        devId:
          type: string
        parentDevId:
          type: string
        vlanTag:
          type: string
        driver:
          type: string
        dhcp:
          enum:
          - yes
          - no
          type: string
        IPv4:
          type: string
        IPv6:
          type: string
        PublicIP:
          type: string
        PublicPort:
          type: string
        NatType:
          type: string
        useStun:
          type: boolean
        useFixedPublicPort:
          type: boolean
        monitorInternet:
          type: boolean
        internetAccess:
          enum:
          - ''
          - yes
          - no
          type: string
        linkStatus:
          enum:
          - ''
          - up
          - down
          type: string
        gateway:
          type: string
        metric:
          type: string
        mtu:
          type: integer
        isAssigned:
          type: boolean
        routing:
          enum:
          - OSPF
          - BGP
          - OSPF,BGP
          - NONE
          type: string
        type:
          enum:
          - WAN
          - LAN
          - TRUNK
          - NONE
          type: string
        IPv4Mask:
          type: string
        MAC:
          type: string
        name:
          type: string
        description:
          type: string
        IPv6Mask:
          type: string
        pathlabels:
          items:
            $ref: '#/components/schemas/PathLabel'
          type: array
        configuration:
          oneOf:
            - $ref: '#/components/schemas/LteConfiguration'
            - $ref: '#/components/schemas/WifiConfiguration'
            - type: object
              minProperties: 0
              maxProperties: 0
          type: object
        dnsServers:
          description: List of DNS address
          items:
            type: string
            maxLength: 20
          type: array
        dnsDomains:
          description: List of DNS search domains
          items:
            type: string
          type: array
        useDhcpDnsServers:
          description: In case of DHCP interface, use the DNS info received from DHCP server
          type: boolean
        ospf:
          type: object
          properties:
            keyId:
              type: string
              nullable: true
            key:
              type: string
            area:
              oneOf:
              - type: string
                pattern: "^[0-9]*$"
              - type: integer
              - type: string
                format: ipv4
            cost:
              type: integer
              nullable: true
        isPublicAddressRateLimited:
          type: boolean
          description: Specifies whether the IP or port address for this interface changes at a high rate
        bandwidthMbps:
          type: object
          properties:
            tx:
              type: number
            rx:
              type: number
        qosPolicy:
          type: string
          nullable: true
      type: object
    DeviceVersion:
      example:
        agent: agent
        router: router
        device: device
      properties:
        agent:
          type: string
        device:
          type: string
        router:
          type: string
      type: object
    DeviceLatestVersion:
      example:
        "versions":
          "device": "1.1.51"
          "agent": "1.0.39"
          "vpp": "19.01-rc0"
          "frr": "7.1"
          "router": "01.01.10"
        "versionDeadline": "2020-03-15T00:00:00.000Z"
      properties:
        versions:
          $ref: '#/components/schemas/DeviceVersion'
        versionDeadLite:
          type: string
    DeviceSyncStatus:
      example:
        state: sync state
        trials: remaining automatic sync trials
        autoSync: auto sync state
      properties:
        state:
          enum:
          - synced
          - syncing
          - not-synced
          - unknown
          type: string
        autoSync:
          enum:
          - on
          - off
          type: string
        trials:
          type: number
          minimum: 0
          maximum: 3
      required:
        - state
        - autoSync
        - trials
    DeviceCpuInfo:
      example:
        hwCores: 2
        grubCores: 2
        vppCores: 1
        powerSaving: false
      properties:
        hwCores:
          type: number
          minimum: 1
          maximum: 65535
        grubCores:
          type: number
          minimum: 1
          maximum: 65535
        vppCores:
          type: number
          minimum: 1
          maximum: 65535
        powerSaving:
          type: boolean
      type: object
    DeviceDistro:
      example:
        version: 20.04
        codename: focal
      properties:
        version:
          type: string
        codename:
          type: string
      type: object
    Role:
      enum:
      - owner
      - manager
      - viewer
      type: string
    Member:
      example:
        user_email: user_email
        role: owner
        user__id: user__id
        user_name: user_name
        account_name: account_name
        _id: _id
        to: to
        organization_name: organization_name
        account__id: account__id
        group: group
        organization__id: organization__id
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        user__id:
          maxLength: 24
          minLength: 24
          type: string
        user_name:
          type: string
        user_email:
          type: string
        to:
          type: string
        account_name:
          type: string
        account__id:
          maxLength: 24
          minLength: 24
          type: string
        group:
          type: string
          nullable: true
        organization_name:
          type: string
          nullable: true
        organization__id:
          maxLength: 24
          minLength: 24
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/Role'
      type: object
    LoginRequest:
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required: ["username", "password"]
      type: object
    LoginResponse:
      example:
        username: "John Doe"
      properties:
        username:
          type: string
      type: object
    DeviceResponseStatus:
      enum:
      - timeout
      - null
      type: string
      nullable: true
    DeviceConnectionStatus:
      enum:
      - connected
      - disconnected
      - unknown
      type: string
    DeviceStatus:
      example:
        sync: sync status
        connection: connection status
        isApproved: true
      properties:
        sync:
          $ref: '#/components/schemas/DeviceSyncStatus'
        connection:
          $ref: '#/components/schemas/DeviceConnectionStatus'
        isApproved:
          type: boolean
        lteStatus:
          type: object
        wifiStatus:
          type: object
      required:
        - sync
        - connection
        - isApproved
    RoutingFilter:
      example:
        $ref: '#/components/examples/RoutingFilterExample'
      properties:
        name:
          type: string
        description:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/RoutingFilterRule'
          type: array
      type: object
    RoutingFilterRule:
      example:
        $ref: '#/components/examples/RoutingFilterRuleExample'
      properties:
        route:
          type: string
          maxLength: 24
        action:
          enum:
          - allow
          - deny
          type: string
        nextHop:
          type: string
        priority:
          type: integer
        custom:
          $ref: '#/components/schemas/RoutingCommandsCLI'
      type: object
    RoutingCommandsCLI:
      example: redistribute static
      type: string
    BgpConfigs:
      example:
        enable: true
        localASN: 45235
        keepaliveInterval: 30
        holdInterval: 90
        routerId: A.B.C.D
        redistributeOspf: true
        neighbors:
        - ip: 1.1.1.1/24
          remoteASN: 6
        - ip: 2.2.2.2/24
          remoteASN: 22435
          password: abcdefg
      properties:
        enable:
          type: boolean
        localASN:
          type: string
          description: The AS number is an identifier for the autonomous system
        keepaliveInterval:
          type: string
          description: The number of seconds for keepalive timer
        holdInterval:
          type: string
          description: The number of seconds for hold time
        routerId:
          type: string
          description: The Router ID of the router
        redistributeOspf:
          type: boolean
          description: If to redistribute to BGP routes that learned by OSPF
        neighbors:
          items:
            $ref: '#/components/schemas/BgpNeighbor'
          type: array
        custom:
          $ref: '#/components/schemas/RoutingCommandsCLI'
      type: object
    BgpNeighbor:
      example:
        ip: 8.8.8.8/32
        remoteASN: 25
        password: abcde
      properties:
        ip:
          type: string
          maxLength: 24
          description: Ip and Mask of the neighbor interface
        remoteASN:
          type: string
          description: The AS number of the remote neighbor
        password:
          type: string
          description: A MD5 password to be used with the tcp socket that is being used to connect to the remote peer
        inboundFilter:
          type: string
          description: A routing filter name to apply on the incoming routes from BGP peer
        outboundFilter:
          type: string
          description: A routing filter name to apply on the expose routes to the BGP peer
        sendCommunity:
          enum:
          - all
          - both
          - extended
          - large
          - standard
          - ''
          type: string
          description: A BGP attribute to attach to the BGP peer
        multiHop:
          type: number
          minimum: 1
          maximum: 255
        custom:
          $ref: '#/components/schemas/RoutingCommandsCLI'
      type: object
    OspfConfigs:
      example:
        helloInterval: 10
        deadInterval: 40
        routerId: A.B.C.D
        redistributeBgp: true
      properties:
        helloInterval:
          type: integer
          description: The number of seconds for HelloInterval timer value
        deadInterval:
          type: integer
          description: The number of seconds for RouterDeadInterval timer value used for Wait Timer and Inactivity Timer
        routerId:
          type: string
          description: The Router ID of the router originating the LSA
        redistributeBgp:
          type: boolean
          description: If to redistribute to OSPF routes that learned by BGP
        custom:
          $ref: '#/components/schemas/RoutingCommandsCLI'
      type: object
    CoordsConfigs:
      example:
        coords:
        - 40.4
        - 5.7
      properties:
        coords:
          items:
            type: number
          type: array
    DeviceRouteInformation:
      example:
        osRoutes:
        - metric: 0
          destination: destination
          flags: flags
          interface: interface
          gateway: gateway
          mask: mask
        - metric: 0
          destination: destination
          flags: flags
          interface: interface
          gateway: gateway
          mask: mask
        vppRoutes:
        - metric: 6
        - metric: 6
      properties:
        error:
          $ref: '#/components/schemas/DeviceResponseStatus'
        deviceStatus:
          $ref: '#/components/schemas/DeviceConnectionStatus'
        osRoutes:
          items:
            $ref: '#/components/schemas/DeviceRouteOs'
          type: array
        vppRoutes:
          items:
            $ref: '#/components/schemas/DeviceRouteVpp'
          type: array
      type: object
    DeviceRouteOs:
      example:
        metric: 0
        destination: destination
        protocol: static
        interface: interface
        gateway: gateway
      properties:
        metric:
          type: number
        destination:
          type: string
        protocol:
          type: string
        interface:
          type: string
        gateway:
          type: string
          nullable: true
      type: object
    DeviceRouteVpp:
      example:
        metric: 6
      properties:
        metric:
          type: integer
      type: object
    DeviceStatistics:
      example:
        status: status
      properties:
        status:
          type: object
      type: object
    TunnelStatistics:
      example:
        time: 1596904500
        interface: "All"
        rx_bps: 1102.330998070846
        tx_bps: 1319.3322041805409
        rx_pps: 6.027811280824863
        tx_pps: 6.027811280824863
        drop_rate: 0
        rtt: 62.31997364848921
        status: "up"
      type: object
    DeviceHealth:
      example:
        time: 1596904500
        cpu:
          - 2.4
          - 1.4
        disk: 37.7
        mem: 65.3
        temp:
          high: 71.2
          critical: 91.1
          value: 46.3
      type: object
    DeviceConfiguration:
      example:
        configuration:
        - message: message
          params:
          - {}
          - {}
        - message: message
          params:
          - {}
          - {}
        status: connected
      properties:
        error:
          $ref: '#/components/schemas/DeviceResponseStatus'
        deviceStatus:
          $ref: '#/components/schemas/DeviceConnectionStatus'
        configuration:
          items:
            $ref: '#/components/schemas/DeviceConfigurationItem'
          type: array
      type: object
    DeviceConfigurationItem:
      example:
        message: message
        params:
        - {}
        - {}
      properties:
        message:
          type: string
        params:
          type: object
      type: object
    DeviceRecoveryInfo:
      example:
        token: 'eyJhbGciOiJIUz...ms9U'
        server: 'https://manage.flexiwan.com:443'
      properties:
        token:
          type: string
        server:
          type: string
      type: object
    WifiConnectRequest:
      example:
        essid: Access point ssid
        password: somepassword  
        useDHCP: true    
      properties:
        essid: 
          type: string
        password:
          type: string
        useDHCP:
          type: boolean
      type: object
    InterfaceOperationResponse:
      example:
        deviceStatus: connected
      properties:
        error:
          $ref: '#/components/schemas/DeviceResponseStatus'
        deviceStatus:
          $ref: '#/components/schemas/DeviceConnectionStatus'
      type: object
    InterfaceStatus:
      example:
        status:
          key: value
        deviceStatus: connected
      required:
        - deviceStatus
        - status
      properties:
        error:
          $ref: '#/components/schemas/DeviceResponseStatus'
        status:
          oneOf:
            - $ref: '#/components/schemas/LteStatus'
            - $ref: '#/components/schemas/WifiStatus'
            - type: object
              minProperties: 0
              maxProperties: 0
          type: object
        deviceStatus:
          $ref: '#/components/schemas/DeviceConnectionStatus'
      type: object
    DeviceLog:
      example:
        logs:
        - logs
        - logs
        status: connected
      properties:
        error:
          $ref: '#/components/schemas/DeviceResponseStatus'
        deviceStatus:
          $ref: '#/components/schemas/DeviceConnectionStatus'
        logs:
          items:
            type: string
          type: array
      type: object
    DeviceBgpStatus:
      example:
        deviceStatus: connected
        status:
          neighbors:
          - neighbor
          - neighbor
      properties:
        error:
          $ref: '#/components/schemas/DeviceResponseStatus'
        deviceStatus:
          $ref: '#/components/schemas/DeviceConnectionStatus'
        status:
          type: object
          properties:
            time:
              type: number
            neighbors:
              items:
                type: string
              type: array
      type: object
    DevicePacketTraces:
      example:
        logs:
        - logs
        - logs
        status: connected
      properties:
        error:
          $ref: '#/components/schemas/DeviceResponseStatus'
        deviceStatus:
          $ref: '#/components/schemas/DeviceStatus'
        logs:
          items:
            type: string
          type: array
      type: object
    DeviceUpgradeRequest:
      type: object
      properties:
        date:
          type: string
    DevicesUpgradeRequest:
      type: object
      properties:
        devices:
          type: array
          items:
            type: string
        date:
          type: string
    DevicePolicies:
      type: object
      properties:
        multilink:
          type: object
          $ref: '#/components/schemas/DevicePolicy'
        firewall:
          type: object
          $ref: '#/components/schemas/DevicePolicy'
        qos:
          type: object
          $ref: '#/components/schemas/DevicePolicy'
      required:
        - multilink
        - firewall
        - qos
    DevicePolicy:
      type: object
      properties:
        policy:
          type: object
          properties:
            _id:
              maxLength: 24
              minLength: 24
              type: string
            name:
              type: string
            description:
              type: string
        status:
          enum:
          - ''
          - installing
          - installed
          - uninstalling
          type: string
    PeerDhGroup:
      type: string
      enum:
        - none
        - modp-768
        - modp-1024
        - modp-1536
        - modp-2048
        - modp-3072
        - modp-4096
        - modp-6144
        - modp-8192
        - ecp-256
        - ecp-384
        - ecp-521
        - modp-1024-160
        - modp-2048-224
        - modp-2048-256
        - ecp-192
    PeerCryptoAlg:
      type: string
      enum:
        - des-iv64
        - des
        - 3des
        - rc5
        - idea
        - cast
        - blowfish
        - 3idea
        - des-iv32
        - null
        - aes-cbc
        - aes-ctr
        - aes-gcm-16
    PeerKeySize:
      type: string
      enum:
        - '128'
        - '256'
    PeerProtocol:
      type: string
      enum:
        - any
        - icmp
        - tcp
        - udp
    PeerIntegAlg:
      type: string
      enum:
        - none
        - md5-96
        - sha1-96
        - des-mac
        - kpdk-md5
        - aes-xcbc-96
        - md5-128
        - sha1-160
        - cmac-96
        - aes-128-gmac
        - aes-192-gmac
        - aes-256-gmac
        - hmac-sha2-256-128
        - hmac-sha2-384-192
        - hmac-sha2-512-256
    Peer:
      example:
        _id: _id
        name: Cloud Provider Name
        idType: fqdn
        remoteIdType: fqdn
        localId: a4bbd424b1
        remoteId: 100.100.100.100
        psk: 123456f5621c1a95997997c8cd123456
        remoteIP: 100.100.100.100
        urls: [monitoring.com]
        ips: [1.1.1.1, 8.8.8.8]
        ikeDhGroup: modp-2048
        ikeCryptoAlg: aes-cbc
        ikeKeySize: 256
        ikeIntegAlg: hmac-sha2-256-128
        espCryptoAlg: aes-cbc
        espKeySize: 256
        espIntegAlg: hmac-sha2-256-128
        espDhGroup: ecp-256
        sessionLifeTime: 3600
        ikeLifeTime: 86400
        pfs: false
        localIpRangeStart: 0.0.0.0
        localIpRangeEnd: 255.255.255.255
        localPortRangeStart: 0
        localPortRangeEnd: 65535
        localProtocol: any
        remoteIpRangeStart: 0.0.0.0
        remoteIpRangeEnd: 255.255.255.255
        remotePortRangeStart: 0
        remotePortRangeEnd: 65535
        remoteProtocol: any
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        idType:
          type: string
          enum:
            - fqdn
            - ip4-addr
            - email
        remoteIdType:
          type: string
          enum:
            - fqdn
            - ip4-addr
            - email
        localId:
          type: string
        remoteId:
          type: string
        psk:
          type: string
        remoteIP:
          type: string
          format: ipv4
        ips:
          type: array
          items:
            type: string
            format: ipv4
        urls:
          type: array
          items:
            type: string
        ikeDhGroup:
          $ref: '#/components/schemas/PeerDhGroup'
        ikeCryptoAlg:
          $ref: '#/components/schemas/PeerCryptoAlg'
        ikeKeySize:
          $ref: '#/components/schemas/PeerKeySize'
        ikeIntegAlg:
          $ref: '#/components/schemas/PeerIntegAlg'
        espDhGroup:
          $ref: '#/components/schemas/PeerDhGroup'
        espCryptoAlg:
          $ref: '#/components/schemas/PeerCryptoAlg'
        espKeySize:
          $ref: '#/components/schemas/PeerKeySize'
        espIntegAlg:
          $ref: '#/components/schemas/PeerIntegAlg'
        sessionLifeTime:
          type: string
        pfs:
          type: boolean
        ikeLifeTime:
          type: string
        localIpRangeStart:
          type: string
          format: ipv4
        localIpRangeEnd:
          type: string
          format: ipv4
        localPortRangeStart:
          type: string
        localPortRangeEnd:
          type: string
        localProtocol:
          $ref: '#/components/schemas/PeerProtocol'
        remoteIpRangeStart:
          type: string
          format: ipv4
        remoteIpRangeEnd:
          type: string
          format: ipv4
        remotePortRangeStart:
          type: string
        remotePortRangeEnd:
          type: string
        remoteProtocol:
          $ref: '#/components/schemas/PeerProtocol'
    PeersIdPUTResponse:
      required:
        - updatedPeer
        - reconstructedTunnels
      properties:
        updatedPeer:
          type: object
          $ref: '#/components/schemas/Peer'
        reconstructedTunnels:
          type: integer
    Tunnel:
      example:
        tunnelStatusA: '{}'
        num: 0
        interfaceADetails: '{}'
        isActive: true
        interfaceBDetails: '{}'
        tunnelStatusB: '{}'
        interfaceA: '{}'
        interfaceB: '{}'
        deviceA: '{}'
        deviceAconf: true
        deviceB: '{}'
        __v: 6
        deviceBconf: true
        _id: _id
        tunnelStatus: 'Connected'
        isPending: false
        pendingReason: ''
      properties:
        num:
          type: integer
        isActive:
          type: boolean
        deviceAconf:
          type: boolean
        deviceBconf:
          type: boolean
        _id:
          maxLength: 24
          minLength: 24
          type: string
        __v:
          type: integer
        deviceA:
          type: object
        deviceB:
          type: object
          nullable: true
        interfaceA:
          type: object
        interfaceB:
          type: object
          nullable: true
        interfaceADetails:
          type: object
        interfaceBDetails:
          type: object
          nullable: true
        tunnelStatusA:
          type: object
        tunnelStatusB:
          type: object
          nullable: true
        tunnelStatus:
          enum:
            - Connected
            - Not Connected
            - Pending
            - N/A
          type: string
        isPending:
          type: boolean
        pendingReason:
          type: string
      type: object
    TunnelsNotificationsPut:
      example:
        org: organizationId,
        tunnels: tunnelsList,
        notifications: notifications
      properties:
        organizationId:
          maxLength: 24
          minLength: 24
          type: string
        tunnelsList:
          type: array
          items:
            type: string
            maxLength: 24
            minLength: 24
        notifications:
          type: object
          properties:
            'Link/Tunnel round trip time':
              $ref: '#/components/schemas/tunnelNotificationsSchema'
            'Link/Tunnel default drop rate':
              $ref: '#/components/schemas/tunnelNotificationsSchema'
      type: object
    StaticRouteRequest:
      example:
        _id: _id
        destination: destination
        ifname: interface devId
        gateway: gateway
        metric: metric
        redistributeViaOSPF: true
        redistributeViaBGP: false
        conditions:
          destination: 5.5.5.5/5
          via:
            devId: pci:0000:00:03.00
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        destination:
          description: Destination
          maxLength: 24
          type: string
        gateway:
          description: Gateway to use
          maxLength: 24
          type: string
        ifname:
          description: Interface devId
          type: string
        metric:
          description: Route metric
          type: string
        redistributeViaOSPF:
          description: Indicates whether the route should be redistributed via OSPF.
            Note that the "true" value will return if in the OSPF Global Settings, the redistribution option is enabled for all static routes
          type: boolean
        redistributeViaBGP:
          description: Indicates whether the route should be redistributed via BGP
          type: boolean
        conditions:
          type: object
          properties:
            destination:
              type: string
            type:
              type: string
              enum:
                - ''
                - route-exist
                - route-not-exist
            via:
              type: object
              properties:
                devId:
                  type: string
                tunnelId:
                  type: number
      type: object
    StaticRoute:
      example:
        destination: destination
        ifname: interface
        gateway: gateway
        metric: metric
        status: "completed"
        redistributeViaOSPF: true
        redistributeViaBGP: false
        conditions:
          destination: 5.5.5.5/5
          via:
            devId: pci:0000:00:03.00
      properties:
        _id:
          type: string
        destination:
          description: Destination
          maxLength: 24
          type: string
        gateway:
          description: Gateway to use
          maxLength: 24
          type: string
        ifname:
          description: Interface name
          maxLength: 64
          type: string
        metric:
          description: Route metric
          type: string
        status:
          description: Route status
          type: string
        redistributeViaOSPF:
          description: Indicates whether the route should be redistributed via OSPF.
            Note that the "true" value will return if in the OSPF Global Settings, the redistribution option is enabled for all static routes
          type: boolean
        redistributeViaBGP:
          description: Indicates whether the route should be redistributed via BGP
          type: boolean
        conditions:
          type: array
          items:
            type: object
            properties:
              destination:
                type: string
              via:
                type: object
                properties:
                  devId:
                    type: string
                  tunnelId:
                    type: number
      type: object
    DhcpMacAssign:
      example:
        host: "host1"
        mac: "08:00:27:fd:00:00"
        ipv4: "20.20.20.20"
        useHostNameAsDhcpOption: true
      properties:
        host:
          description: Device hostname
          minLength: 1
          maxLength: 253
          type: string
        mac:
          description: MAC Address
          maxLength: 20
          type: string
        ipv4:
          description: IPv4 Address
          maxLength: 20
          type: string
        useHostNameAsDhcpOption:
          type: boolean
      required:
      - host
      - mac
      - ipv4
    DhcpRequest:
      example:
        interface: "0000:00:08.00"
        rangeStart: "20.20.20.2"
        rangeEnd: "20.20.20.255"
        dns: ["8.8.8.8", "8.8.8.4"]
        options: [{ "option": "routers", "code": "3", "value": "20.20.20.100"}]
        macAssign: [{"host":"host1", "mac":"08:00:27:fd:00:00", "ipv4":"20.20.20.20"}]
        maxLeaseTime: 7200
        defaultLeaseTime: 600
      properties:
        interface:
          description: Interface bus Address
          maxLength: 64
          type: string
        rangeStart:
          description: Start IP Range
          maxLength: 20
          type: string
        rangeEnd:
          description: End IP Range
          maxLength: 20
          type: string
        dns:
          description: List of DNS address
          items:
            type: string
            maxLength: 20
          type: array
        options:
          type: array
          items:
            $ref: '#/components/schemas/DhcpOptionItem'
        macAssign:
          description: List of MAC Assignments
          items:
            $ref: '#/components/schemas/DhcpMacAssign'
          type: array
        defaultLeaseTime:
          type: number
          maximum: 31536000
          minimum: -1
        maxLeaseTime:
          type: number
          maximum: 31536000
          minimum: -1
      required:
      - interface
      - rangeStart
      - rangeEnd
      type: object
    DhcpOptionItem:
      type: object
      properties:
        option:
          type: string
          enum: [routers, tftp-server-name, ntp-servers, interface-mtu, time-offset, domain-name]
        code:
          type: string
          enum: ['3', '66', '42', '26', '2', '15']
        value:
          type: string
    Dhcp:
      example:
        _id: "5e5f662f1b0eba50742b6223"
        interface: "0000:00:08.00"
        rangeStart: "20.20.20.2"
        rangeEnd: "20.20.20.255"
        dns: ["8.8.8.8", "8.8.8.4"]
        macAssign: [{"host":"host1", "mac":"08:00:27:fd:00:00", "ipv4":"20.20.20.20"}]
        options: [{ "option": "routers", "code": "3", "value": "20.20.20.100"}]
        status: "completed"
        maxLeaseTime: 7200
        defaultLeaseTime: 600
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        interface:
          description: Interface bus Address
          maxLength: 64
          type: string
        rangeStart:
          description: Start IP Range
          maxLength: 20
          type: string
        rangeEnd:
          description: End IP Range
          maxLength: 20
          type: string
        dns:
          description: List of DNS address
          items:
            type: string
            maxLength: 20
          type: array
        options:
          type: array
          items:
            $ref: '#/components/schemas/DhcpOptionItem'
        macAssign:
          description: List of MAC Assignments
          items:
            $ref: '#/components/schemas/DhcpMacAssign'
          type: array
        status:
          description: Route status
          type: string
        defaultLeaseTime:
          type: number
          maximum: 31536000
          minimum: -1
          nullable: true
        maxLeaseTime:
          type: number
          maximum: 31536000
          minimum: -1
          nullable: true
      type: object
    ResetPasswordRequest:
      example:
        email: email
      properties:
        email:
          type: string
      type: object
    UpdatePasswordRequest:
        example:
          email: email
        properties:
          email:
            type: string
        type: object
    OrganizationSelectRequest:
      properties:
        org:
          type: string
      type: object
    RegisterAccountRequest:
      example:
        userJobTitle: userJobTitle
        serviceType: Provider
        country: country
        password: password
        accountName: accountName
        userLastName: userLastName
        userPhoneNumber: userPhoneNumber
        acceptTerms: true
        userFirstName: userFirstName
        companySize: companySize
        email: email
        numberSites: 0
      properties:
        accountName:
          type: string
        email:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        userJobTitle:
          type: string
        userPhoneNumber:
          type: string
        password:
          type: string
        country:
          maxLength: 2
          type: string
        companySize:
          type: string
        serviceType:
          enum:
          - Provider
          - Internal
          type: string
        numberSites:
          type: integer
        acceptTerms:
          type: boolean
      type: object
    AccountSelectRequest:
      example:
        account: "12345678890"
      properties:
        account:
          type: string
      type: object
    CreateTunnelCommand:
      properties:
        devices:
          items:
            type: string
          type: array
      type: object
    DeleteTunnelCommand:
      properties:
        id:
          type: string
      type: object
    DeviceCommand:
      type: object
      properties:
        method:
          type: string
        devices:
          type: object
        meta:
          type: object
    DeviceSendRequest:
      example:
        entity: "agent"
        api: "exec_timeout"
        params: {"cmd":"date","timeout":60}
      type: object
      properties:
        entity:
          type: string
        api:
          type: string
        params:
          oneOf:
            - type: object
            - type: string
            - type: array
    DeviceSendResponse:
      example:
        router-cfg-hash: "e5dbf5ee9541264307041dfae1f6abbe2b62179e"
        message: {"output":"Mon Feb  8 10:22:11 UTC 2020\n", "returncode":0, "error":""}
        ok: 1
        entity: "osReply"
      type: object
      properties:
        router-cfg-hash:
          type: string
        message:
          oneOf:
            - type: object
            - type: string
            - type: array
        ok:
          type: integer
        entity:
          type: string
    Invoice:
      properties:
        id:
          type: string
        type:
          type: string
        payment_method:
          type: string
        amount:
          type: number
        base_currency_code:
          type: string
        status:
          type: string
        date:
          type: number
    BillingSummary:
      properties:
        _id:
          type: string
        current:
          type: integer
        max:
          type: integer
        account:
          type: string
    Billing:
      properties:
        invoices:
          items:
            $ref: '#/components/schemas/Invoice'
          type: array
        summary:
          $ref: '#/components/schemas/BillingSummary'
        subscription:
          type: string
    CouponRequest:
      properties:
        name:
          type: string
    PathLabel:
      example:
        _id: id
        name: name
        description: description
        color: color,
        type: type
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        color:
          type: string
        type:
          enum:
          - DIA
          - Tunnel
          type: string
      required:
      - name
      - description
      - color
      - type
      type: object
    PathLabelRequest:
      example:
        name: name
        description: description
        color: color
      properties:
        name:
          type: string
        description:
          type: string
        color:
          type: string
      required:
        - name
        - description
        - color
        - type
      type: object
    MLPolicy:
      example:
        _id: id
        name: name
        description: description
        applyOnWan: false
        overrideDefaultRoute: true
        rules: [rule 1, rule 2, ...]
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        applyOnWan:
          type: boolean
        overrideDefaultRoute:
          type: boolean
        rules:
          items:
            $ref: '#/components/schemas/MLRule'
          type: array
      required:
      - _id
      - name
      - description
      - rules
      type: object
    MLPolicyList:
      example:
        id: id
        name: name
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
      required:
      - _id
      - name
    MLPolicyMetaData:
      example:
        _id: id
        name: name
        description: description
        installCount: installCount
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        installCount:
          $ref: '#/components/schemas/PolicyInstallCount'
          type: object
      required:
      - _id
      - name
      - description
      - installCount
      type: object
    PolicyInstallCount:
      example:
        installed: installed
        pending: pending
        failed: failed
        deleted: deleted
      properties:
        installed:
          type: integer
        pending:
          type: integer
        failed:
          type: integer
        deleted:
          type: integer
      required:
      - installed
      - pending
      - failed
      - deleted
    MLPolicyRequest:
      example:
        name: name
        description: description
        applyOnWan: false
        overrideDefaultRoute: true
        rules: [rule 1, rule 2, ...]
      properties:
        name:
          type: string
        description:
          type: string
        applyOnWan:
          type: boolean
        overrideDefaultRoute:
          type: boolean
        rules:
          items:
            $ref: '#/components/schemas/MLRuleRequest'
          type: array
      required:
      - name
      - description
      - rules
      type: object
    MLRule:
      example:
        _id: id
        name: name
        priority: priority
        enabled: true
        classification: classification
        action: action
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        priority:
          type: integer
          minimum: 0
          maximum: 1000
        enabled:
          type: boolean
        classification:
          schema:
          $ref: '#/components/schemas/MLClassification'
        action:
          schema:
          $ref: '#/components/schemas/MLAction'
      required:
      - _id
      - name
      - priority
      - enabled
      - classification
      - action
      type: object
    MLRuleRequest:
      example:
        name: name
        priority: priority
        enabled: true
        classification: classification
        action: action
      properties:
        name:
          type: string
        priority:
          type: integer
          minimum: 0
          maximum: 1000
        enabled:
            type: boolean
        classification:
          $ref: '#/components/schemas/MLClassification'
        action:
          $ref: '#/components/schemas/MLAction'
      required:
      - name
      - priority
      - enabled
      - classification
      - action
      type: object
    MLClassification:
      example:
        prefix: prefix
        application: application
      anyOf:
      - $ref: '#/components/schemas/MLClassPrefix'
      - $ref: '#/components/schemas/MLClassApp'
      - $ref: '#/components/schemas/MLClassCategory'
      type: object
    MLAction:
      example:
        links: [link1, link2, ...]
        fallback: fallback
      properties:
        links:
          items:
            anyOf:
            - $ref: '#/components/schemas/LinksRequest'
            - $ref: '#/components/schemas/LinksResponse'
          type: array
        order:
          enum:
          - priority
          - load-balancing
        fallback:
          enum:
          - drop
          - by-destination
          type: string
      required:
        - links
        - order
        - fallback
    LinksResponse:
      properties:
        pathlabels:
          items:
            $ref: '#/components/schemas/PathLabel'
          type: array
        order:
          enum:
          - priority
          - load-balancing
          - link-quality
          type: string
      type: object
      required:
        - pathlabels
        - order
    LinksRequest:
      properties:
        pathlabels:
          items:
            type: string
          type: array
        order:
          enum:
          - priority
          - load-balancing
          - link-quality
          type: string
      type: object
      required:
        - pathlabels
        - order
    MLClassPrefix:
      properties:
        prefix:
          properties:
            ip:
              type: string
            ports:
              type: string
              pattern: "^$|^()([0-9]|[1-5]?[0-9]{2,4}|6[0-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])(-([0-9]|[1-5]?[0-9]{2,4}|6[0-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5]))?$"
            protocol:
              enum:
              - ""
              - tcp
              - udp
              type: string
          required:
          - ip
          - ports
          - protocol
          type: object
    MLClassApp:
      properties:
        application:
          properties:
            appId:
              type: string
          required:
          - appId
          type: object
    MLClassCategory:
      properties:
        application:
          properties:
            category:
              type: string
            serviceClass:
              type: string
            importance:
              enum:
              - ''
              - high
              - medium
              - low
              type: string
          required:
          - category
          - serviceClass
          - importance
          type: object
    FirewallPolicy:
      example:
        _id: id
        name: name
        description: description
        isDefault: false
        rules: [rule 1, rule 2, ...]
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        isDefault:
          type: boolean
          nullable: true
        rules:
          items:
            $ref: '#/components/schemas/FirewallRule'
          type: array
      required:
      - _id
      - name
      - description
      - rules
      type: object
    FirewallPolicyList:
      example:
        _id: id
        name: name
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
      required:
      - _id
      - name
    FirewallPolicyMetaData:
      example:
        _id: id
        name: name
        description: description
        installCount: installCount
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        installCount:
          $ref: '#/components/schemas/PolicyInstallCount'
          type: object
      required:
      - _id
      - name
      - description
      - installCount
      type: object
    FirewallPolicyRequest:
      example:
        name: name
        description: description
        isDefault: false
        rules: [rule 1, rule 2, ...]
      properties:
        name:
          type: string
        description:
          type: string
        isDefault:
          type: boolean
        rules:
          items:
            $ref: '#/components/schemas/FirewallRuleRequest'
          type: array
      required:
      - name
      - rules
      type: object
    FirewallRule:
      example:
        _id: id
        description: description
        priority: priority
        enabled: true
        direction: inbound
        inbound: edgeAccess
        classification: classification
        action: allow
        interfaces: interfaces
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        description:
          maxLength: 100
          type: string
        priority:
          type: integer
          minimum: 0
          maximum: 1000
        enabled:
          type: boolean
        direction:
          enum:
          - inbound
          - outbound
          - lanNat
          type: string
        inbound:
          enum:
          - edgeAccess
          - portForward
          - nat1to1
          type: string
        classification:
          schema:
          $ref: '#/components/schemas/FirewallRuleClassification'
        action:
          enum:
          - allow
          - deny
          type: string
        internalIP:
          type: string
        internalPortStart:
          type: string
        interfaces:
          items:
            type: string
          type: array
      required:
      - _id
      - priority
      - enabled
      - direction
      - classification
      - action
      type: object
    FirewallRuleRequest:
      example:
        description: description
        priority: priority
        enabled: true
        direction: inbound
        inbound: edgeAccess
        classification: classification
        action: allow
        interfaces: interfaces
      properties:
        description:
          maxLength: 100
          type: string
        priority:
          type: integer
          minimum: 0
          maximum: 1000
        enabled:
          type: boolean
        direction:
          enum:
          - inbound
          - outbound
          - lanNat
          type: string
        inbound:
          enum:
          - edgeAccess
          - portForward
          - nat1to1
          type: string
        classification:
          schema:
          $ref: '#/components/schemas/FirewallRuleClassification'
        action:
          enum:
          - allow
          - deny
          type: string
        interfaces:
          items:
            type: string
          type: array
      required:
      - priority
      - enabled
      - direction
      - classification
      - action
      type: object
    FirewallRuleClassification:
      example:
        source: source
        destination: destination
      properties:
        source:
          anyOf:
          - $ref: '#/components/schemas/FirewallClassIpPort'
          - $ref: '#/components/schemas/FirewallClassTrafficId'
          - $ref: '#/components/schemas/FirewallClassTrafficTags'
          type: object
        destination:
          anyOf:
          - $ref: '#/components/schemas/FirewallClassIpProtoPort'
          - $ref: '#/components/schemas/FirewallClassTrafficId'
          - $ref: '#/components/schemas/FirewallClassTrafficTags'
          type: object
    FirewallClassIpPort:
      properties:
        ipPort:
          properties:
            ip:
              type: string
            ports:
              type: string
              pattern: "^$|^()([0-9]|[1-5]?[0-9]{2,4}|6[0-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])(-([0-9]|[1-5]?[0-9]{2,4}|6[0-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5]))?$"
          type: object
    FirewallClassIpProtoPort:
      properties:
        ipProtoPort:
          properties:
            ip:
              type: string
            ports:
              type: string
              pattern: "^$|^()([0-9]|[1-5]?[0-9]{2,4}|6[0-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])(-([0-9]|[1-5]?[0-9]{2,4}|6[0-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5]))?$"
            protocols:
              items:
                $ref: '#/components/schemas/Protocol'
              type: array
            interface:
              type: string
          type: object
    FirewallClassTrafficId:
      properties:
        trafficId:
          type: string
    FirewallClassTrafficTags:
      properties:
        trafficTags:
          properties:
            category:
              type: string
            serviceClass:
              type: string
            importance:
              enum:
              - ''
              - high
              - medium
              - low
              type: string
          required:
          - category
          - serviceClass
          - importance
          type: object
    QOSPolicy:
      example:
        _id: id
        name: name
        description: description
        advanced: false
        outbound: outbound
        inbound: inbound
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        advanced:
          type: boolean
        outbound:
          nullable: true
          type: object
        inbound:
          nullable: true
          type: object
      required:
      - _id
      - name
      type: object
    QOSPolicyList:
      example:
        _id: id
        name: name
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
      required:
      - _id
      - name
    QOSPolicyMetaData:
      example:
        _id: id
        name: name
        description: description
        installCount: installCount
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        installCount:
          $ref: '#/components/schemas/PolicyInstallCount'
          type: object
      required:
      - _id
      - name
      - description
      - installCount
      type: object
    QosPolicyRequest:
      example:
        name: name
        description: description
        advanced: false
        outbound: outbound
        inbound: inbound
      properties:
        name:
          type: string
        description:
          type: string
        advanced:
          type: boolean
        outbound:
          type: object
        inbound:
          type: object
      required:
      - name
      - rules
      type: object
    QOSTrafficMap:
      example:
        oam:
          high: realtime
        signaling:
          medium: best-effort
      type: object
    QosTrafficMapRequest:
      example:
        oam:
          high: realtime
        signaling:
          medium: best-effort
      type: object
    Protocol:
      enum:
      - tcp
      - udp
      - icmp
      type: string
    Error:
      properties:
        error:
          type: string
      required:
      - error
      type: object
    BadRequestError:
      properties:
        error:
          type: string
      required:
      - code
      - message
      type: object
    InterfaceOperationReq:
      type: object
      oneOf:
        - type: object
          required:
          - op
          properties:
            op:
              type: string
              enum:
                - reset
        - type: object
          required:
          - op
          - params
          properties:
              op:
                type: string
                enum:
                  - pin
              params:
                type: object
                required:
                  - currentPin
                  - enable
                  - newPin
                  - puk
                properties:
                  currentPin:
                    type: string
                    pattern: ^(\d{4}|\d{8}|)$
                    description: PIN (Personal identification number) Code. 4 or 8 digits
                  enable:
                    type: boolean
                  newPin:
                    type: string
                    pattern: ^(\d{4}|\d{8}|)$
                    description: PIN (Personal identification number) Code. 4 or 8 digits
                  puk:
                    type: string
                    pattern: ^(\d{8}|)$
                    description: PUK (Personal unblocking key) Code. 8 digits
    WifiClient:
      type: object
      required:
      - mac
      - signal
      - ip
      properties:
        mac:
          type: string
        signal:
          type: string
        ip:
          type: string
          description: WiFi client IP
    WifiStatus:
      type: object
      required:
      - clients
      - accessPointStatus
      properties:
        clients:
          items:
            $ref: '#/components/schemas/WifiClient'
          type: array
        accessPointStatus:
          type: boolean
    LteStatus:
      required:
      - signals
      - connectivity
      - packetServiceState
      - hardwareInfo
      - systemInfo
      - simStatus
      - defaultSettings
      - phoneNumber
      - pinState
      - connectionState
      - registrationNetworkState
      properties:
        signals:
          type: object
          properties:
            rssi:
              type: string
            rsrp:
              type: string
            rsrq:
              type: string
            sinr:
              type: string
            snr:
              type: string
        connectivity:
          type: boolean
        packetServiceState:
          type: object
          properties:
            uplinkSpeed:
              type: string
            downlinkSpeed:
              type: string
        hardwareInfo:
          type: object
          properties:
            vendor:
              type: string
            model:
              type: string
            imei:
              type: string
        systemInfo:
          type: object
          properties:
            cellId:
              oneOf:
              - type: string
              - type: number
            operatorName:
              type: string
            mcc:
              type: string
            mnc:
              type: string
        simStatus:
          type: string
        defaultSettings:
          type: object
          properties:
            apn:
              type: string
            userName:
              type: string
            password:
              type: string
            auth:
              type: string
        phoneNumber:
          type: string
        pinState:
          type: object
          properties:
            pin1Status:
              type: string
            pin1Retries:
              type: string
            puk1Retries:
              type: string
        connectionState:
          type: string
        registrationNetworkState:
          type: object
          properties:
            registerState:
              type: string
            networkError:
              type: string
        sim:
          type: object
          properties:
            iccid:
              type: string
            imsi:
              type: string
    LteConfiguration:
      required:
        - apn
        - enable
      properties:
        apn:
          type: string
        enable:
          type: boolean
        password:
          type: string
        user:
          type: string
      type: object
    WifiBand:
      type: object
      required:
        - enable
        - bandwidth
        - encryption
        - securityMode
        - hideSsid
        - ssid
        - password
        - region
      properties:
        enable:
          type: boolean
        bandwidth:
          type: string
          enum: ['20']
        encryption:
          type: string
          enum: [aes-ccmp]
        securityMode:
          type: string
          enum: [wpa2-psk, wpa-psk, open, '']
        hideSsid:
          type: boolean
        ssid:
          type: string
          maxLength: 32
        password:
          oneOf:
            - type: string
              enum: ['']
            - type: string
              minLength: 8
              maxLength: 63
        region:
          type: string
          minLength: 2
          maxLength: 2
          pattern: ^([A-Z]{2})$
          description: Country Code (ISO/IEC 3166-1)
    WifiBand2.4GHz:
      type: object
      allOf:
        - $ref: '#/components/schemas/WifiBand'
        - type: object
          required:
            - channel
            - operationMode
          properties:
            channel:
              type: string
              pattern: ^([0-9]|1[0-3])$
              description: 'Between 0-13'
            operationMode:
              type: string
              enum: [g, n, '']
    WifiBand5GHz:
      type: object
      allOf:
        - $ref: '#/components/schemas/WifiBand'
        - type: object
          required:
            - channel
            - operationMode
          properties:
            channel:
              type: string
              enum: ['0', '36', '40', '44', '48', '149', '153', '157', '161', '165']
              # pattern: ^(3[6-9]|[4-9][0-9]|17[0-3]|1[0-6][0-9])$
              description: 'valid channel number for 5GHz'
            operationMode:
              type: string
              enum: [a, ac, n, '']
    WifiConfiguration:
      type: object
      oneOf:
        - type: object
          minProperties: 1
          maxProperties: 1
          required:
            - 5GHz
          properties:
            5GHz:
              $ref: '#/components/schemas/WifiBand5GHz'
        - type: object
          minProperties: 1
          maxProperties: 1
          required:
            - 2.4GHz
          properties:
            2.4GHz:
              $ref: '#/components/schemas/WifiBand2.4GHz'
        - type: object
          minProperties: 2
          maxProperties: 2
          required:
            - 2.4GHz
            - 5GHz
          properties:
            2.4GHz:
              $ref: '#/components/schemas/WifiBand2.4GHz'
            5GHz:
              $ref: '#/components/schemas/WifiBand5GHz'
    DevicesDeleteRequest:
      properties:
        ids:
          items:
            type: string
          type: array
        filters:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        removeVrrp:
          type: boolean
    Filter:
      example:
        key: name
        op: ==
        val: example
      properties:
        key:
          type: string
        op:
          type: string
        val:
          type: string
      required:
      - key
      - op
      - val
      type: object
    ApplicationOperationReq:
      type: object
      required:
      - action
      - params
      properties:
        action:
          type: string
        params:
          type: object
    VrrpDeviceInterfacesResponse:
      type: object
      properties:
        name:
          type: string
        _id:
          type: string
        interfaces:
          type: object
          additionalProperties:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              IPv4:
                type: string
              dhcp:
                type: string
              type:
                type: string
      example:
        id: deviceId
        name: Berlin
        interfaces:
        - _id: interfaceId
          name: eth1
          IPv4: 172.16.1.1/24
          type: LAN
    VrrpGroupPutPostResponse:
      type: object
      properties:
        jobs:
          type: number
        reasons:
          type: array
          items:
            type: string
    VrrpStatus:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
          name:
            type: string
          virtualIp:
            type: string
            format: ipv4
          virtualRouterId:
            type: number
          devices:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                name:
                  type: string
                priority:
                  type: number
                status:
                  type: object
                  properties:
                    state:
                      type: string
                      enum:
                      - Master
                      - Backup
                      - Initialize
                      - Interface Down
                    time:
                      type: number
                    adjusted_priority:
                      type: number
    VrrpGroup:
      type: object
      properties:
        name:
          type: string
        virtualRouterId:
          type: number
          minimum: 1
          maximum: 255
        virtualIp:
          type: string
          format: ipv4
        preemption:
          type: boolean
        acceptMode:
          type: boolean
        devices:
          type: array
          items:
            type: object
            properties:
              device:
                type: string
              interface:
                type: string
              priority:
                type: number
                minimum: 1
                maximum: 255
              trackInterfacesMandatory:
                type: array
                items:
                  type: string
              trackInterfacesOptional:
                type: array
                items:
                  type: string
    VrrpGroupListItem:
      example:
        name: VRRP group for Site 1
        virtualRouterId: 1
        virtualIp: 172.16.1.100
        devices:
        - name: Paris-1
          _id: deviceId
        - name: Paris-2
          _id: deviceId
      properties:
        name:
          type: string
        virtualRouterId:
          type: number
          minimum: 1
          maximum: 255
        virtualIp:
          type: string
        devices:
          items:
            type: object
            properties:
              name:
                type: string
              _id:
                type: string
              jobStatus:
                type: string
              status:
                type: object
              interface:
                type: string
          type: array
      type: object
    notificationSettingsSchema:
      type: object
      properties:
        warningThreshold:
          type: number
        criticalThreshold:
          type: number
        thresholdUnit:
          type: string
        severity:
          type: string
        immediateEmail:
          type: boolean
        resolvedAlert:
          type: boolean
        type:
          type: string
    tunnelNotificationsSchema:
      type: object
      properties:
        warningThreshold:
          type: number
        criticalThreshold:
          type: number
  securitySchemes:
    apiKey:
      in: header
      name: APIKEY
      type: apiKey
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
  examples:
    RoutingFilterExample:
      value:
        name: list name
        description: list description
        rules:
        - $ref: '#/components/examples/RoutingFilterRuleExample'
    RoutingFilterRuleExample:
      value:
        route: 100.200.30.1/24
        action: deny
        nextHop: 8.8.8.8
        priority: 2


